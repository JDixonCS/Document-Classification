,sentence
0,Session 9C: Learning to Rank 2
1,
2,"SIGIR '19, July 21­25, 2019, Paris, France"
3,
4,Variance Reduction in Gradient Exploration for Online Learning to Rank
5,
6,"Huazheng Wang, Sonwoo Kim, Eric McCord-Snook, Qingyun Wu, Hongning Wang"
7,"Department of Computer Science, University of Virginia Charlottesville, VA 22904, USA"
8,"{hw7ww,sak2m,esm7ky,qw2ky,hw5x}@virginia.edu"
9,
10,ABSTRACT
11,Online Learning to Rank
12,"In this work, we aim at reducing the variance of gradient estimation in OL2R algorithms. We project the selected updating direction"
13,CCS CONCEPTS
14,· Information systems  Learning to rank; · Theory of computation  Online learning algorithms;
15,KEYWORDS
16,Online learning to rank; Dueling bandit; Variance Reduction
17,"ACM Reference Format: Huazheng Wang, Sonwoo Kim, Eric McCord-Snook, Qingyun Wu, Hongning Wang. 2019. Variance Reduction in Gradient Exploration for Online Learning to Rank . In Proceedings of the 42nd International ACM SIGIR"
18,"Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org. SIGIR '19, July 21­25, 2019, Paris, France © 2019 Association for Computing Machinery. ACM ISBN 978-1-4503-6172-9/19/07. . . $15.00 https://doi.org/10.1145/3331184.3331264"
19,
20,Conference on Research and Development in Information Retrieval
21,1 INTRODUCTION
22,Online Learning to Rank
23,"One strain of OL2R algorithms, represented by Dueling Bandit Gradient Descent"
24,"Recently, several works in OL2R have realized this deficiency of gradient exploration in DBGD, and propose various types of solutions to improve its learning efficiency. One type of studies explore multiple random directions in each iteration of model update. Unbiased estimate of gradient is maintained in this type of revisions of DBGD, as the directions are still uniformly sampled. Model estimation variance is expected to be reduced by testing more exploratory directions; but, in practice, as the users would only examine a finite number of documents under each query"
25,
26,835
27,
28,Session 9C: Learning to Rank 2
29,
30,"SIGIR '19, July 21­25, 2019, Paris, France"
31,
32,"estimated gradient remains unbiased, and thus face high risk of converging towards a sub-optimal solution."
33,"Although empirically effective, previous OL2R solutions neglect an important property of click-based result utility evaluation: users only perceive utility from the documents that they actually examine. As a result, the true gradient is only revealed by features playing an essential role in ranking those examined documents under this query. Here we define essential features in ranking a particular set of documents as those features with non-zero variance among the documents. Assume in an interleaved test, one ranking feature takes a constant value in all examined documents under this query, such that it has no effect in differentiating the quality of those documents. Then, the proposed exploratory direction's contribution to the ranker update on this particular dimension cannot be justified by this test result. Random gradient exploration hence introduces an arbitrary update on this dimension, which inevitably leads to high estimation variance over time. This example can be generalized to situations where multiple"
34,The above analysis suggests that an interleaved test only reveals the projection of true gradient in the spanned space of examined documents under a test query
35,2 RELATED WORK
36,One key family of OL2R methods root in Dueling Bandit Gradient Descent
37,"Recently, attempts have been made to improve the learning efficiency of DBGD-type algorithms. Schuth et al. [17] proposed a"
38,
39,Multileave Gradient Descent
40,"Our solution falls into this second category of variance reduction for DBGD-type algorithms. Distinct from previous attempts to restrict gradient exploration before an interleaved test, we instead modify the selected direction after the test. As users' result examination is affected by the ranked results, which are in turn determined by the proposed exploratory directions, restricting the exploration space before the interleaved test potentially introduces bias in the subsequent interleaved test and model update. Our solution is based on the insight that only the projected true gradient in the document space can be revealed by an interleaved test. Hence, we decide to project the selected direction after each interleaved test, and thus guarantee an unbiased estimate of true gradient. Since the document space is expected to be smaller than the entire parameter space"
41,3 METHOD
42,In this section we describe our proposed document space gradient projection method for online learning to rank. We first describe the problem setup in Section 3.1. And then we describe Document Space Projected Dueling Bandit Gradient Descent
43,3.1 Problem Setup
44,"The estimation of OL2R models can be formalized as a dueling bandit problem [24]. In iteration t, an OL2R algorithm receives a"
45,
46,836
47,
48,Session 9C: Learning to Rank 2
49,
50,"SIGIR '19, July 21­25, 2019, Paris, France"
51,
52,"query and associated candidate documents, which are represented as a set of d-dimensional query-document pair feature vectors Xt = {x1, x2, ..., xs }. The algorithm takes two actions: first, it proposes two rankers, whose parameters are denoted as w, w ;"
53,"second, it ranks the given documents with these two rankers ac-"
54,
55,cordingly. An oracle
56,
57,"results and provides feedback. In practice, an interleaving method"
58,
59,[15] is applied to merge the ranking lists of the two rankers and
60,
61,display the resulting ranked list to the user. User preference is in-
62,
63,"ferred from the click feedback. Thus, the ranker that contributes more clicked documents is preferred. We denote w  w  for the event that w is preferred over w . The comparison between two"
64,individual rankers is determined independently of other comparisons performed before with a probability P
65,We quantify the performance of an online learning algorithm
66,
67,using cumulative regret defined as follows:
68,
69,T
70,
71,R(T ) = ft
72,
73,(1)
74,
75,t =1
76,
77,"where wt and wt are rankers compared at time t, and w is the best"
78,
79,"ranker in ground-truth. As a result, the distinguishability measure"
80,ft
81,
82,ft
83,
84,decreasing to zero over time.
85,
86,"In this work, we make the following assumptions similar to [24]."
87,We assume an unknown utility function vt
88,A link function  describes the probabilistic comparison of utili-
89,
90,"ties of two rankers as,"
91,
92,Pt w  w  = ft
93,
94,"The link function should be rotation-symmetric, which means"
95,(x) = 1 - 
96,"cumulative probability distribution function. For example, a com-"
97,mon choice of link function is the standard logistic function 
98,1
99,"1+exp(-x) , which satisfies all the assumptions."
100,
101,3.2 Document Space Projected Dueling Bandit Gradient Descent
102,We describe our proposed Document Space Projected Dueling Ban-
103,dit Gradient Descent
104,
105,Algorithm 1 Document Space Projected Dueling Bandit Gradient
106,
107,Descent
108,
109,"1: Inputs:  ,"
110,
111,2: Initiate w1 = sample_unit_vector() 3: for t = 1 to T do
112,
113,"4: Receive query Xt = {x1, x2, ..., xs } 5: ut = sample_unit_vector() 6: wt = wt + ut 7: Generate ranked lists l(Xt , wt ), l(Xt , wt) 8: Set Lt = Interleave {l(Xt , wt ), l(Xt , wt)} , and present Lt"
114,
115,to user
116,
117,"9: Receive click positions Ct on Lt , and infer click credits"
118,
119,10:
120,
121,"{ct , ct } if ct"
122,
123,ct
124,
125,then
126,
127,11:
128,
129,wt +1 = wt
130,
131,12: else
132,
133,13:
134,
135,"Based on Ct , infer user examined top mt documents in"
136,
137,Lt .
138,
139,14:
140,
141,Solve the orthogonal projection matrix At for document
142,
143,"space St = span({xLt,1, xLt,2, ..., xLt,mt })."
144,
145,15:
146,
147,Project ut onto St by t = Atut
148,
149,16:
150,
151,wt +1 = wt + t
152,
153,17: end if
154,
155,18: end for
156,
157,rankers
158,as Team Draft Interleaving [15] or Probabilistic Interleaving [8]. The
159,user examines the result list and provides implicit click feedback
160,to indicate their relevance evaluation of the results. The interleav-
161,ing method uses this implicit feedback to infer which ranker is
162,preferred by the user. If the exploratory ranker is preferred
163,"wins the duel), previous DBGD-style algorithms update the current ranker by wt+1 = wt + ut , where  is the learning rate; otherwise the current ranker stays intact. This gradient exploration strategy"
164,"yields an unbiased estimate of the true gradient [5], in terms of"
165,"expectation. However, since the exploratory gradient ut is required to be uni-"
166,"formly sampled from the entire d dimensional unit sphere Sd-1, the model update suffers from high variance in its gradient estimation, especially when d is large, as in practice. Various improvements to this issue have been proposed in the past, but they still introduce"
167,"other difficulties, such as variance and bias trade-off [7, 12, 20], and"
168,"test sensitivity and efficiency [18, 25]."
169,Unlike previous works that reduce the sampling space of gradi-
170,"ent exploration before the interleaved test [7, 12, 20], we change"
171,the winning direction after the test. The key insight is that only the projected true gradient in the spanned space of examined documents under query Xt
172,
173,837
174,
175,Session 9C: Learning to Rank 2
176,
177,"SIGIR '19, July 21­25, 2019, Paris, France"
178,
179,ut gt
180,
181,S t'
182,
183,gt'
184,
185,w tS
186,t
187,
188,w t'
189,
190,w*
191,
192,u t'
193,
194,w
195,
196,w
197,
198,Figure 1: Illustration of model update for DBGD-DSP in a
199,"three dimensional space. Dashed lines represent the trajectory of DBGD following different update directions. ut is the selected direction by DBGD, which is in the 3-d space. Red bases present the document space St on a 2-d plane. ut is projected onto St to become t for model update."
200,
201,"the document space St = span{x1, ..xm } and the other component ut - t that is orthogonal to document space St . The orthogonal component ut -t does not affect the ranking among the examined documents, i.e."
202,guarantee is only obtained in expectation. The variance could po-
203,"tentially be large: for example, the blue and purple updating traces"
204,"slow down model convergence, when the number of observations"
205,is finite.
206,"As shown in line 14 to 16 of Algorithm 1, we solve for the orthogonal projection matrix At of document space St , and project the selected direction ut onto the document space St after each interleaved test. We leave the detailed design of constructing document space and solving projection matrix At in Section 3.5. Before that, we first rigorously prove the projection maintains an unbiased"
207,estimate of true gradient in Section 3.3. Since the document space is
208,"constructed only by the examined documents, the rank of document"
209,space is expected to be smaller than the entire parameter space.
210,This directly leads to lower variance and faster model convergence.
211,"We show that our document space projection reduces the variance of gradient estimation from d to Rank(At ) in Section 3.4, and then analyze its benefit for regret reduction from low-variance gradient"
212,estimation.
213,
214,3.3 Unbiasedness of Gradient Estimation
215,
216,We now prove that our document space projected gradient is an
217,
218,unbiased estimate of true gradient in the sense of expectation [24]. We define Zt
219,
220,Zt
221,
222,1 w.p. 1 - Pt
223,
224,Then the gradient used for model update in DBGD-DSP
225,
226,ht = -Zt
227,
228,(2)
229,
230,Note that by adding a negative sign we view our model update as online gradient descent wt +1 = wt - t .
231,We now show in the following theorem that this is an unbiased
232,gradient estimation of true gradient. By defining a smoothed version of ft as f^t
233,"Theorem 3.1. The projected gradient t in DBGD-DSP is an unbiased estimate of true gradient, i.e.,"
234,
235,E[ht ]
236,
237,=
238,
239,d
240,
241,
242,
243,f^t
244,
245,(w
246,
247,)
248,
249,(3)
250,
251,over random unit vector ut .
252,
253,"Proof. Based on the Lemma 1 of [24], we have"
254,
255,E [ht ] = E [-Zt
256,
257,E[ht ] = Eut Sd-1 [ft
258,
259,= Eut Sd-1 [Ft
260,
261,=
262,
263,d
264,
265,Eut Bd [Ft
266,
267,+ ut )ut ]
268,
269,=
270,
271,d
272,
273,F^t
274,
275,=
276,
277,d
278,
279,At f^t
280,
281,=
282,
283,d
284,
285,f^t
286,
287,where the fourth equality is based on Stokes' Theorem. The last
288,
289,equality holds because gradient f^t
290,
291,"St , and thus projecting it by At maps back to itself."
292,
293,
294,
295,"The guarantee of unbiased gradient estimation is a major advantage of our proposed document space gradient projection method, compared with previous attempts to reduce the gradient exploration space, such as Oosterhuis et. al [12] and Wang et al. [20]. Our method enjoys reduced variance of gradient estimate"
296,
297,3.4 Regret Analysis of DBGD-DSP
298,"We now analyze the regret of our proposed DBGD-DSP algorithm, starting with its variance of gradient update."
299,
300,Lemma 3.2. The variance of gradient update in DBGD-DSP is bounded by
301,
302,E[|ht |2] = Eut Sd-1
303,
304,| - Zt
305,
306,Rank(At ) . d
307,
308,838
309,
310,Session 9C: Learning to Rank 2
311,
312,"SIGIR '19, July 21­25, 2019, Paris, France"
313,
314,Proof.
315,
316,E[|ht |2] = Eut | - Zt
317,Eut |At ut |2 = Eut
318,
319,= tr
320,
321,At
322,
323,1 d
324,
325,I
326,
327,At
328,
329,=
330,
331,1 tr
332,d
333,
334,At At
335,
336,1 = d tr
337,
338,=
339,
340,Rank(At ) d
341,
342,where tr(·) denotes the matrix trace operation. The sixth equality
343,
344,"holds because ut is uniformly sampled from a unit sphere, and"
345,
346,its covariance matrix Eut
347,
348,ut ut
349,
350,is
351,
352,1 d
353,
354,I
355,
356,.
357,
358,Since
359,
360,At
361,
362,is
363,
364,an
365,
366,orthogonal
367,
368,"projection matrix, the eighth equality holds for At At = At ."
369,
370,Remark. The variance of gradient update in DBGD [24] is bounded by Eut | - Zt
371,
372,Comparing the variance of gradient update in DBGD-DSP with
373,
374,"DBGD,"
375,
376,our
377,
378,method
379,
380,reduces
381,
382,the
383,
384,variance
385,
386,from
387,
388,1
389,
390,to
391,
392,Rank(At d
393,
394,)
395,
396,.
397,
398,Since
399,
400,"the dimension of projection matrix At is d-by-d, we have Rank(At )"
401,
402,"d, which guarantees the reduction of variance in DBGD-DSP com-"
403,
404,"paring to that in DBGD. The rank of At is also bounded by the number of examined documents mt , since document space St is constructed by these mt examined documents. In practice, users"
405,
406,"would only examine a handful of documents [4, 9], while the rank-"
407,
408,"ing feature dimension is expected to be much larger. We argue that mt  d, such that our document space projection achieves considerable variance reduction."
409,
410,The significance of this variance reduction can be intuitively
411,
412,understood from Figure 1: though different traces of model update
413,
414,"would eventually lead to the same converged model, if one has a"
415,
416,"sufficiently large amount of interactions with users, the one with"
417,
418,lower variance would always require less observations. A faster
419,
420,"converging algorithm leads to user satisfaction earlier. Next, we"
421,
422,verify this benefit by proving the reduction of regret introduced by
423,
424,the reduced variance in gradient estimation.
425,
426,Theorem 3.3. By setting
427,
428,
429,
430,m
431,
432,=
433,
434,max
435,t
436,
437,mt
438,
439,","
440,
441,
442,
443,=
444,
445,"2Rm ,  13LT 1/4"
446,
447,=
448,
449,Rm
450,
451,","
452,
453,T
454,
455,the expected regret of DBGD-DSP as defined in Eq
456,
457,"by,"
458,
459,"E[Re]  2T T 3/426RmL,"
460,
461,(4)
462,
463,where
464,
465,T
466,
467,=
468,
469,
470,
471,L
472,
473,13LT
474,
475,1/4
476,
477,
478,
479,L 13LT 1/4 - Lv L2 2Rm
480,
481,"The proof is obtained by extending Theorem 2 in [24]. We omit the details due to space limit, and emphasize that the key difference is introduced by replacing variance of gradient estimation from"
482,
483,Eut | - Zt
484,
485,the the
486,
487,variance regret of
488,
489,of gradient estimation is reduced
490,DBGD can be reduced from O( dT
491,
492,from 1 3/4) to
493,
494,"Oto(RmanTkd(3A/t4)),,"
495,
496,where m is the maximum number of documents included in a docu-
497,
498,"ment space under a single query. Again, as the number of included"
499,
500,ranking features is oftentimes much larger than the number of doc-
501,
502,"uments a user would examine under a single query, the reduction of"
503,
504,"regret is considerable. Moreover, as the reduction of variance from"
505,
506,our project-based method is independent from the way about how
507,
508,"the proposal directions are generated, our method can be generally"
509,
510,applied to most existing DBGD-type OL2R algorithms to improve
511,
512,their learning convergence.
513,
514,3.5 Practical Treatments of Document Space Projection
515,Now we discuss several practical treatments of our proposed Docu-
516,"ment Space Projection method, including the construction of docu-"
517,ment space and orthogonal projection matrix.
518,"In our theoretical analysis, we have assumed the knowledge of"
519,users' examined documents and corresponding projection matrix.
520,"However, in practice, a user's result examination is unobserved."
521,A rich body of research has been developed to perform statistical
522,"inference of it, collectively known as click modeling [3, 4]. Any"
523,of these existing click modeling solutions can be plugged into our
524,"solution framework, i.e., line 13 of Algorithm 1. In this work, we"
525,"simply follow [9] to infer user examination by the last clicked position: given the click position list Ct , we use the last clicked position cl,t to approximate the last examined position Mt by setting Mt = cl,t + k, where k is a hyper-parameter. Based on sequential examination hypothesis of click modeling, every document before the last clicked position is examined, and we use k to approximate the number of positions following the last clicked position that"
526,was still examined. We leave more comprehensive study of click
527,modeling in our solution as future work.
528,"The above treatment provides a reasonable inference of examined documents. However, it requires a careful choice of k for each query"
529,at risk of introducing bias in gradient projection. To avoid bias in
530,"constructing the document space, we also consider adding histori-"
531,"cally examined documents to the current query's document space. Specifically, we add r recently examined documents to the current document space St to compensate the potentially overlooked examined documents in the current query."
532,"In line 14 of Algorithm 1, we solve the orthogonal projection matrix At of document space St . At could be computed by several methods. Denote Dt as a d-by-mt matrix where each column is the feature vector for an examined document. One can use QR decom-"
533,position or Singular Value Decomposition
534,efficient large-scale implementation. But the choice for the con-
535,struction of this project matrix does not affect the convergence nor
536,unbiasedness of our proposed solution.
537,
538,839
539,
540,Session 9C: Learning to Rank 2
541,
542,"SIGIR '19, July 21­25, 2019, Paris, France"
543,
544,4 EXPERIMENTS
545,"To demonstrate our proposed Document Space Projection method's empirical efficacy, we compare the performance of several state-ofthe-art OL2R algorithms on five public learning to rank datasets, with and without our document space projection method applied."
546,4.1 Experiment Setup
547,"· Datasets. We tested our algorithms and the baselines on five benchmark datasets: including MQ2007, MQ2008, NP2003 [11], MSLR-WEB10K [14], and the Yahoo! Learning to Rank Challenge dataset [2]. In each of the five datasets, each query-document pair is encoded as a vector of ranking features. These features include PageRank, TF.IDF, Okapi-BM25, URL length, language model score, and many more varied by dataset."
548,"The MQ2007 and MQ2008 datasets are collected from the 2007 and 2008 Million Query track at TREC [19]. MQ2007 contains about 1700 queries, and MQ2008 contains about 800 queries, which represent a mix of informational and navigational search intents. They both have 46-dimensional feature vectors to represent querydocument pairs, and the document relevance are labeled in three grades: 0"
549,"The NP2003 dataset also comes from the TREC Web track, consisting of queries crawled from the .gov domain. It is comprised of about 150 navigational-focused queries, with over 1000 document relevance assessments per query. It uses 64 ranking features, and the document relevance labels are binary"
550,"The MSLR-WEB10K dataset was released by Microsoft in 2010, and consists of 10,000 queries with relevance assessments coming from a labeling set from the Microsoft Bing search engine. It has 136 ranking features, and the relevance judgments range from 0"
551,"The Yahoo! Learning to Rank Challenge dataset was also released in 2010, as an effort on part of Yahoo! to promote the dataset as well as research into better learning to rank algorithms. The dataset contains about 36,000 queries, 883,000 assessed documents, and 700 ranking featuress. Again, the relevance judgments range from 0"
552,"This diversity in the structure of the datasets that we chose to test on helps us to evaluate our algorithms more holistically. While small, the MQ2007 and MQ2008 sets have been around for a long time and have a good mix of query types. NP2003 gives us insight into how the algorithms perform on navigational search intents specifically, which are markedly different in nature from informational search intents. MSLR-WEB10K and the Yahoo! dataset are large-scale datasets used by actual commercial search engines, which give us a better understanding of how the algorithms perform in practice. Since each dataset was split into training, testing, and validation subsets, we used the training sets for online experiments to measure cumulative performance, and used the testing sets for evaluating offline performance. · Simulated User Interactions. Based on an online learning to rank framework proposed in [13], we use the standard setup to simulate user interactions. Within this framework, we used the Cascade Click Model to simulate user click behavior. This model assumes that a user interacts with a set of search results by linearly scanning the list from top and making a decision for each document"
553,
554,Table 1: Configurations of simulation click models.
555,
556,Click Probability
557,
558,Stop Probability
559,
560,R 0 123 4 01234
561,
562,Per 0.0 0.2 0.4 0.8 1.0 0.0 0.0 0.0 0.0 0.0
563,
564,Nav 0.05 0.3 0.5 0.7 0.95 0.2 0.3 0.5 0.7 0.9
565,
566,Inf 0.4 0.6 0.7 0.8 0.9 0.1 0.2 0.3 0.4 0.5
567,
568,"as to whether or not to click. In the model, the probability of a click for a given document is conditioned on the relevance label of that document, as a user is expected to be more likely to click on relevant documents. After evaluating each document, the user must decide whether or not to continue perusing the list. This decision's probability distribution is again conditioned on the relevance of the current document, as a user is more likely to stop looking through the results if he/she has already satisfied their information need. These aforementioned probabilities can be altered to simulate different types of users and interactions."
569,"As illustrated in Table 1, we use three different click model probability configurations to represent three different types of users. First, we have the perfect user, who clicks on all relevant documents and does not stop browsing until they have visited all of the documents. This type of users contribute the least noise, as they make no mistakes and the feedback is entirely accurate. Second, we have the navigational user, who is very likely to click on the first highly relevant document that he/she sees and stops there. Third, we have the informational user, who, in his/her search for information, sometimes clicks on irrelevant documents, and as such contributes a significant amount of noise in click feedback. · Evaluation Metrics. As set forth in [16], cumulative"
570,Q1: Can our proposed Document Space Projection method consistently improve the performance of state-of-the-art OL2R algorithms?
571,Q2: Do gradients rectified by our document space projection explore the gradient space more efficiently?
572,Q3: How do different hyper-parameter settings alter the performance of our document space projection?
573,· Baseline Algorithms. We choose the following three state-ofthe-art OL2R algorithms as our baselines for comparison:
574,
575,840
576,
577,Session 9C: Learning to Rank 2
578,
579,"SIGIR '19, July 21­25, 2019, Paris, France"
580,
581,NDCG NDCG NDCG
582,
583,0.72 perfect
584,
585,0.70
586,
587,0.68
588,
589,0.66
590,
591,0.64
592,
593,0.62 0
594,
595,2000
596,
597,4000
598,
599,6000
600,
601,Impressions
602,
603,(a) Perfect
604,
605,DBGD DBGD-DSP MGD MGD-DSP NSGD NSGD-DSP
606,
607,8000
608,
609,10000
610,
611,0.72 navigational
612,0.70
613,
614,0.68
615,
616,0.66
617,
618,0.64
619,
620,0.62
621,
622,0.60
623,
624,0.58 0
625,
626,2000
627,
628,4000
629,
630,6000
631,
632,Impressions
633,
634,8000
635,
636,(b) Navigational
637,
638,10000
639,
640,0.70 informational
641,0.68
642,
643,0.66
644,
645,0.64
646,
647,0.62
648,
649,0.60
650,
651,0.58
652,
653,0.56 0
654,
655,2000
656,
657,4000
658,
659,6000
660,
661,Impressions
662,
663,8000
664,
665,(c) Informational
666,
667,10000
668,
669,Figure 2: Offline NDCG@10 on Yahoo! dataset.
670,
671,- DBGD [24]: A single direction uniformly sampled from the whole parameter space is explored.
672,"- MGD [17]: Multiple directions are explored in one iteration to reduce the gradient estimation variance. Multileaving is used to compare multiple rankers. If there is a tie, the model updates towards the mean of all winners."
673,- NSGD[20]: Multiple directions are sampled from the null space of previously poorly performing gradients. Ties are broken by evaluating the tied candidate rankers on a recent set of difficult queries.
674,"We apply our proposed Document Space Projection to the baseline algorithms, and compare them with DBGD-DSP, MGD-DSP and NSGD-DSP, respectively."
675,4.2 Performance of Document Space Projection
676,"We begin our experimental analysis by answering our first evaluation question. We compared all algorithms over 3 click models and 5 datasets. We set the hyper-parameters of DBGD, MGD and NSGD according to their original papers. Following [17, 24], we set the exploration step size  to 1 and learning rate  to 0.1. Both MGD and NSGD explore 9 proposal directions in one iteration. For our document space projection method, we consider k = 3 documents following the last clicked position as examined documents, and add r = 10 recently examined documents into document space St . We use SVD to solve for orthonormal basis Vt of the document space St , and compute the projection matrix by At = VtVt."
677,"We reported the offline NDCG@10 and online cumulative NDCG @10 after 10,000 iterations in Table 2 and Table 3. Due to space limit, we only reported the offline performance during the 10,000 iterations over 3 click models on Yahoo dataset, a large-scale realworld L2R dataset with 700 ranking features, in Figure 2. MGD improves the online performance over DBGD by exploring multiple rankers simultaneously, and NSGD further improves over MGD by exploring gradients in a constrained subspace, as shown in Table 2. We observe that our proposed document space projection method consistently improves the online performance of all baseline algorithms. Recall that in Section 3.4 our theoretical analysis suggested that document space projection reduces the gradient estimation variance and improves the regret"
678,
679,dimensions
680,"From Figure 2 and Table 3 we notice that document space projection mostly improves offline performance over baseline algorithms. Figure 2 shows that document space projection significantly accelerates the convergence rate over the baseline algorithms, because of the reduced variance in gradient estimation. We also observe that applying document space projection under the perfect click model may lead to degraded performance, for example DBGD on MQ2007 and Yahoo dataset. This is because document space projection guarantees an unbiased gradient estimation under the assumption of known result examinations, as discussed in Section 3.3. However, since in practice a user's result examination is unobserved, we approximated the examined documents by including all documents before the last clicked position and k additional documents after the last clicked position. The perfect click model is an ideal case that users' stop probability is set to 0.0"
681,4.3 Analysis of Document Space Projection
682,"To answer the second evaluation question, we design two experiments to show the effectiveness of document space projected gradient. In the first experiment, we study the utility of document space projected gradient. We compare the ranking performance of linearly interpolating the unrectified direction ut and its document space projected version t , i.e., t +"
683,
684,841
685,
686,Session 9C: Learning to Rank 2
687,
688,"SIGIR '19, July 21­25, 2019, Paris, France"
689,
690,"Table 2: Online NDCG@10, standard deviation and relative improvement of document space projection of each algorithm after 10,000 queries."
691,
692,Click Model Algorithm MQ2007
693,
694,MQ2008
695,
696,MSLR-WEB10K
697,
698,NP2003
699,
700,Yahoo
701,
702,Perfect
703,
704,DBGD DBGD-DSP MGD MGD-DSP NSGD NSGD-DSP
705,
706,679.3
707,
708,847.1
709,
710,532.2
711,
712,1130.2
713,
714,1165.5
715,
716,Navigational
717,
718,DBGD DBGD-DSP MGD MGD-DSP NSGD NSGD-DSP
719,
720,646.1
721,
722,817.9
723,
724,517.5
725,
726,1062.3
727,
728,1133.3
729,
730,Informational
731,
732,DBGD DBGD-DSP MGD MGD-DSP NSGD NSGD-DSP
733,
734,583.4
735,
736,763.9
737,
738,472.4
739,
740,849.8
741,
742,1107.3
743,
744,"Table 3: Offline NDCG@10, standard deviation and relative improvement of document space projection of each algorithm after 10,000 queries."
745,
746,Click Model Algorithm MQ2007
747,
748,MQ2008
749,
750,MSLR-WEB10K
751,
752,NP2003
753,
754,Yahoo
755,
756,Perfect
757,
758,DBGD DBGD-DSP MGD MGD-DSP NSGD NSGD-DSP
759,
760,0.484
761,
762,0.683
763,
764,0.331
765,
766,0.737
767,
768,0.688
769,
770,Navigational
771,
772,DBGD DBGD-DSP MGD MGD-DSP NSGD NSGD-DSP
773,
774,0.463
775,
776,0.667
777,
778,0.320
779,
780,0.728
781,
782,0.663
783,
784,Informational
785,
786,DBGD DBGD-DSP MGD MGD-DSP NSGD NSGD-DSP
787,
788,0.410
789,
790,0.641
791,
792,0.294
793,
794,0.699
795,
796,0.623
797,
798,"algorithm on MSLR-WEB10K dataset. Similar observations were obtained on other datasets, but due to space limit we have to omit those detailed results. We report the online and offline performance by varying  from 0"
799,
800,"three click models when we increase , i.e., trust more on the projected direction t for model update. This confirms the effectiveness of the projected direction t within document space comparing with the unrectified direction ut from the entire parameter space. The offline performance is generally robust to the setting of  for"
801,navigational and information click models. This is expected since
802,
803,842
804,
805,Session 9C: Learning to Rank 2
806,
807,"SIGIR '19, July 21­25, 2019, Paris, France"
808,
809,(a) Online performance of
810,linearly interpolating ut and its projection t
811,
812,Cosine Similarity to w*
813,NDCG
814,
815,0.5 informational
816,0.4
817,0.3
818,
819,0.75 perfect
820,0.70
821,0.65
822,
823,(b) Offline performance of
824,linearly interpolating ut and its projection t
825,
826,0.2
827,0.1
828,0.0 0
829,
830,MGD MGD-DSP
831,
832,1000
833,
834,2000
835,
836,3000
837,
838,Impressions
839,
840,4000
841,
842,5000
843,
844,0.60
845,0.55
846,0.50 0
847,
848,DBGD-DSP-GT DBGD-DSP MGD-DSP-GT MGD-DSP
849,
850,1000
851,
852,2000
853,
854,3000
855,
856,4000
857,
858,5000
859,
860,Impressions
861,
862,(c) Cosine similarity between offline best model w and online
863,document space model
864,
865,Figure 3: Analyzing Document Space Projection.
866,
867,(a) Including k documents following last clicked position
868,
869,(b) Including r recently examined documents
870,
871,Figure 4: Hyper-parameter tuning for Document Space Projection.
872,
873,both MGD and MGD-DSP are unbiased and will eventually converge to similar offline performance after sufficiently large number of iterations
874,"In the second experiment, we trained an offline LambdaRank model [1] using the complete annotated relevance labels in the largescale MSLR-WEB10K dataset. Then given this w, we compared cosine similarity between the online estimated model parameters with and without DSP in each iteration using MGD as the baseline. We show the result of first 5,000 iterations. In Figure 3"
875,"To answer the third evaluation question, we compare different hyper-parameters used for constructing the document space on MSLR-WEB10K dataset. We vary k from 0 to 7 and report the result in Figure4"
876,
877,construct the document space and guarantee an unbiased gradient estimate.
878,"In Figure 4(b), we vary r . As we discussed in Section 3.5, we are motivated to add recently examined documents to compensate for potentially overlooked examined documents in the current query. The effect of different choices of r is more noticeable under the perfect click model. This echoes our analysis above that under perfect click model some examined documents may be overlooked when k is not large enough. Thus correctly setting up r could reduce the bias in document space construction and compensate the final performance. From the result figure, we notice that setting r = 20 provides the best result. Under navigational and informational click models, the algorithm is generally robust to the choice of r . This is because the approximations of examined documents are already accurate with a reasonable setting of k."
879,5 CONCLUSION
880,"In this paper, we propose and develop the Document Space Projection"
881,"Currently, we are using a heuristic method to construct the document space. However, we did observe that the performance of DSP varies under different click models for simulated user click feedback, i.e., different underlying examination behaviors. As for our future work, we plan to incorporate different click modeling solutions for more accurate document space construction. It would also be meaningful to study how to perform document space based exploratory direction generation, before the interleaved test. Exploratory direction pre-selection is expected to further accelerate the gradient exploration and improve user satisfaction during online learning, but we also need to ensure it is unbiased."
882,
883,843
884,
885,Session 9C: Learning to Rank 2
886,
887,"SIGIR '19, July 21­25, 2019, Paris, France"
888,
889,ACKNOWLEDGMENTS
890,We thank the anonymous reviewers for their insightful comments.
891,This work was supported in part by National Science Foundation
892,Grant IIS-1553568 and IIS-1618948 and Bloomberg Data Science
893,Ph.D. Fellowship.
894,REFERENCES
895,"[1] Christopher JC Burges. 2010. From ranknet to lambdarank to lambdamart: An overview. Learning 11, 23-581"
896,[2] Olivier Chapelle and Yi Chang. 2011. Yahoo! learning to rank challenge overview. In Proceedings of the Learning to Rank Challenge. 1­24.
897,"[3] Olivier Chapelle and Ya Zhang. 2009. A dynamic bayesian network click model for web search ranking. In Proceedings of the 18th international conference on World wide web. ACM, 1­10."
898,"[4] Nick Craswell, Onno Zoeter, Michael Taylor, and Bill Ramsey. 2008. An experimental comparison of click position-bias models. In Proceedings of the 2008 international conference on web search and data mining. ACM, 87­94."
899,"[5] Abraham D Flaxman, Adam Tauman Kalai, and H Brendan McMahan. 2005."
900,"Online convex optimization in the bandit setting: gradient descent without a gradient. In Proceedings of the sixteenth annual ACM-SIAM symposium on Discrete algorithms. Society for Industrial and Applied Mathematics, 385­394. [6] Artem Grotov and Maarten de Rijke. 2016. Online learning to rank for information retrieval: SIGIR 2016 Tutorial. In Proceedings of the 39th International ACM SIGIR conference on Research and Development in Information Retrieval. ACM, 1215­ 1218."
901,"[7] Katja Hofmann, Anne Schuth, Shimon Whiteson, and Maarten de Rijke. 2013."
902,"Reusing historical interaction data for faster online learning to rank for IR. In Proceedings of the sixth ACM international conference on WSDM. ACM, 183­192. [8] Katja Hofmann, Shimon Whiteson, and Maarten De Rijke. 2011. A probabilistic method for inferring preferences from clicks. In Proceedings of the 20th ACM international conference on Information and knowledge management. ACM, 249­ 258."
903,"[9] Thorsten Joachims, Laura Granka, Bing Pan, Helene Hembrooke, and Geri Gay. 2017. Accurately interpreting clickthrough data as implicit feedback. In ACM SIGIR Forum, Vol. 51. Acm, 4­11."
904,"[10] Tie-Yan Liu et al. 2009. Learning to rank for information retrieval. Foundations and Trends® in Information Retrieval 3, 3"
905,"[11] Tie-Yan Liu, Jun Xu, Tao Qin, Wenying Xiong, and Hang Li. 2007. Letor: Benchmark dataset for research on learning to rank for information retrieval. In Proceedings of SIGIR 2007 workshop on learning to rank for information retrieval, Vol. 310."
906,
907,"[12] Harrie Oosterhuis and Maarten de Rijke. 2017. Balancing Speed and Quality in Online Learning to Rank for Information Retrieval. In Proceedings of the 2017 ACM CIKM. ACM, 277­286."
908,[13] Harrie Oosterhuis and Maarten de Rijke. 2018. Differentiable Unbiased Online Learning to Rank. Proceedings of the 27th ACM International Conference on Information and Knowledge Management - CIKM '18
909,[14] Tao Qin and Tie-Yan Liu. 2013. Introducing LETOR 4.0 Datasets.
910,arXiv:cs.IR/1306.2597
911,"[15] Filip Radlinski, Madhu Kurup, and Thorsten Joachims. 2008. How does clickthrough data reflect retrieval quality?. In Proceedings of the 17th ACM CIKM. ACM, 43­52."
912,"[16] Anne Schuth, Katja Hofmann, Shimon Whiteson, and Maarten de Rijke. 2013. Lerot: An online learning to rank framework. In Proceedings of the 2013 workshop on Living labs for information retrieval evaluation. ACM, 23­26."
913,"[17] Anne Schuth, Harrie Oosterhuis, Shimon Whiteson, and Maarten de Rijke. 2016. Multileave gradient descent for fast online learning to rank. In Proceedings of the Ninth ACM International Conference on WSDM. ACM, 457­466."
914,"[18] Anne Schuth, Floor Sietsma, Shimon Whiteson, Damien Lefortier, and Maarten de Rijke. 2014. Multileaved comparisons for fast online evaluation. In Proceedings of the 23rd ACM CIKM. ACM, 71­80."
915,"[19] Ellen M Voorhees, Donna K Harman, et al. 2005. TREC: Experiment and evaluation in information retrieval. Vol. 1. MIT press Cambridge."
916,"[20] Huazheng Wang, Ramsey Langley, Sonwoo Kim, Eric McCord-Snook, and Hongn-"
917,"ing Wang. 2018. Efficient exploration of gradient space for online learning to rank. In The 41st International ACM SIGIR Conference on Research and Development in Information Retrieval. ACM, 145­154. [21] Xuanhui Wang, Michael Bendersky, Donald Metzler, and Marc Najork. 2016. Learning to rank with selection bias in personal search. In Proceedings of the 39th International ACM SIGIR conference on Research and Development in Information Retrieval. ACM, 115­124. [22] Yisong Yue, Josef Broder, Robert Kleinberg, and Thorsten Joachims. 2012. The k-armed dueling bandits problem. J. Comput. System Sci. 78, 5"
918,"Learning more powerful test statistics for click-based retrieval evaluation. In Proceedings of the 33rd international ACM SIGIR conference on Research and development in information retrieval. ACM, 507­514. [24] Yisong Yue and Thorsten Joachims. 2009. Interactively optimizing information retrieval systems as a dueling bandits problem. In Proceedings of the 26th Annual International Conference on Machine Learning. ACM, 1201­1208. [25] Tong Zhao and Irwin King. 2016. Constructing reliable gradient exploration for online learning to rank. In Proceedings of the 25th ACM International on Conference on Information and Knowledge Management. ACM, 1643­1652."
919,
920,844
921,
922,
