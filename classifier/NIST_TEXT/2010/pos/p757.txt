Re-examination on Lam% in Spam Filtering

Haoliang Qi*, Muyun Yang**, Xiaoning He**, Sheng Li**

*Department of Computer Science and Technology,

**School of Computer Science and Technology,

Heilongjiang Institute of Technology

Harbin Institute of Technology

No.999, Hongqi Street, Harbin, China

No.92,West Dazhi Street, Harbin, China

Email:haoliang.qi@gmail.com, ymy@mtlab.hit.edu.cn, nxnh@qq.com, lisheng@hit.edu.cn

ABSTRACT
Logistic average misclassification percentage (lam%) is a key measure for the spam filtering performance. This paper demonstrates that a spam filter can achieve a perfect 0.00% in lam%, the minimal value in theory, by simply setting a biased threshold during the classifier modeling. At the same time, the overall classification performance reaches only a low accuracy. The result suggests that the role of lam% for spam filtering evaluation should be re-examined.
Categories and Subject Descriptors
H.3.3 [Information Storage and Retrieval]: Information Search and Retrieval - Information filtering
General Terms
Algorithms, Measurement, Performance, Theory
Keywords
Spam Filtering; Lam%; Measurement
1. INTRODUCTION
The spam filtering is generally regarded as a binary classification task to identify spams from normal e-mails (i.e. hams). To evaluate the performance of spam filters, the overall classification accuracy (or the total proportion of misclassified messages) is not a good choice because all errors are treated on equal footing. Nevertheless, the logistic average misclassification percentage (lam%), a single quality measure based only on the filter's binary ham/spam classification accuracy, is proposed as: lam% = logit-1 ((logit(hm%)+logit(sm%))/2), where logit(x)=log(x/(1-x)), in which hm% is ham misclassification percentage, and sm% is spam misclassification percentage[1]. As the geometric mean of the odds of ham and spam misclassification[1], lam% is widely adopted together with 1-AUC by open spam filtering competitions including TREC Spam Filtering Track and CEAS(Conference on Email and Anti-Spam) Spam-filter Challenge. The lam% is designed to impose no a priori relative importance on either ham or spam misclassification, rewarding equally an improvement in the odds of either. However, this paper demonstrates that lam% is inherently defected in allowing a 0.00% by a biased threshold, whereas maintaining a very high error rate. Therefore, it is not reliable enough to observe only lam% as the measure for spam filtering evaluation.
Copyright is held by the author/owner(s). SIGIR 2010, July 19-23, 2010, Geneva, Switzerland. ACM 978-1-60558-896-4/10/07.

2. OPTIMIZATION OF LAM%
The optimization of lam% evolves its definition as the following:
lam% = logit-1 logit(hm%) + logit(sm%) 2
= logit-1((log hm% + log sm% ) / 2) 1 - hm% 1 - sm%
= logit-1((log hm%sm% ) / 2) (1 - hm%)(1 - sm%)
where logit(x)= log(x/(1-x)), and logit-1(x) , the inverse function of logit(x), is defined by logit-1(x) = ex .
1+ ex
In order to minimize lam%, reviewing the monotonic property of
the function lam%, i.e. logit-1(x) , is necessary. Because
[logit-1(x)]' = ex > 0 , logit-1(x) is a monotone increasing (1+ ex )2
function. Consequently, lam% can be minimized by the minimum (log hm%sm% ) / 2 .With either hm% approaching 0
(1 - hm%)(1 - sm%) while sm% unequal to 1, or sm% approaching 0 while hm% unequal to 1, (log hm%sm% ) / 2 can be minimized.
(1 - hm%)(1 - sm%) Therefore a threshold of a spam filter could be set toward either side of hm% or sm%, and this will minimize (log hm%sm% ) / 2 . However an over biased threshold
(1 - hm%)(1 - sm%) such as 1 in probability model will lead to hm%=0, resulting to compute log(0) or to be divided by 0 when computing lam%. Therefore, the threshold should be well determined in order to make a desired hm% and sm%.
Each message with its score above the threshold is labeled as spam, otherwise ham. Through setting a biased threshold, i.e. setting the threshold very high or very low, hm% or sm% could approach zero, and so lam% will tend eventually to be zero. In this sense, the way to optimize lam% via a biased threshold trick is independent of specific filtering models. And Section 3 presents the details of optimizing lam% under the framework of Logistic Regression.
3. BIASED LOGISTIC REGRESSION
Logistic Regression (LR), the state of art spam filtering model [2][3], is used as an example to optimize lam% to zero. In LR model, the prediction of a message is calculated according to logistic function which is described in Equation 1.

757

wph(eyrie=xrsipaismth| exr

i ) = exp( vector of

xr i · wr )/(1+exp(xr i · wr )) the message's features,

vector, and yi is the prediction of the message

wr is xr i .

1 the weight By using

Equation 1, the prediction value is converted between 0 and 1

from a real number ranging from - to +. Algorithm 1 in the

following presents the pseudo code of LR.

((A(123l)))gfoworrripet=ha=m0che;1x/x:r/pii(nL,xryiotii'iga·/il/swirztyie)ci'/(wRi1se+eaigegrgxheoptssl(sdxitroeoinn·0lwarb)e)l

(4) if ( p >0.5 ) predict spam;

(5) else

predict ham;

(6)

if

(

y i'

== uur

1) // uur

y i'

is a spam uur

(7)

w= uur

w + (1-p) ×

uur

uur

xi × TRAIN_RATE

(8) else w = w - p × xi × TRAIN_RATE

where TRAIN_RATE is the learning rate, i.e. the learning speed,

yi' in Line 2 and Line 6 is the golden judgment of xi.

Usually, the prediction is spam if p > 0.5, or ham otherwise (see Line 4 and 5). As mentioned in Section 2, lam% can be optimized by setting the biased threshold. The threshold can be set nearly to 1 or 0, which can decrease hm% or sm% to 0. LR with the biased threshold is referred as biased LR. For biased LR, pseudo codes are the same to the traditional LR except that Line 4 is replaced by "if ( p > threshold ) predict spam". Note that the weight updating in biased LR is not changed, and thus the final prediction scores of messages are not biased (i.e. not changed).

TONE (Train On or Near Error) is adopted to train the spam filter in the actually modeling process. Two types of samples are trained: (1) misclassified samples by the filter; and (2) correctly classified samples if falling within a predefined classification boundary.

Character 4-grams, the first 3,200 features of each message and binary feature scoring are used similar to ref. [2].

4. EXPERIMENTAL RESULTS
We evaluated the lam% optimization method on TREC public spam filtering datasets. The basic information of the datasets is shown in Table 1.
Table 2 shows the experimental results which are acquired by TREC Spam Filter Evaluation Toolkit. hm%, sm% and 1-AUC
are also reported. The parameters of LR and the biased LR are the
same except the threshold: TRAIN_RATE = 0.002, TONE = 0.45, and threshold = 0.999999 for biased LR.
By analyzing the experimental results, we can see that the proposed method decreases lam% to 0.00%, i.e. the minimal value in theory, across all datasets. Although lam% is perfect, the accuracy of the filters for most cases is below 50%, i.e. the performance of random guess. Therefore, there is an obvious defect in lam% as the measure for spam filtering evaluation.
It is very interesting that 1-AUC (area under the ROC curve), the other measure of spam filtering, is left untouched when biasing the threshold. This means that optimizing lam% method proposed

in this paper does not hurt 1-AUC. 1-AUC can be computed as 1AUC = SwappedPairs/m/n [4][5], where m and n are the number of golden spam messages and that of golden ham messages, respectively. Swapped pairs are defined as pairs that are ranked in the wrong order. Hence, ROC area also has a probabilistic interpretation: the probability that a random ham will receive a lower score than a random spam[1]. Because of this pair-wise correct measure [4] and unchanged prediction score of the biased LR, 1-AUC is unchanged too.

Table 1. Statistics of experimental corpora

Corpus Language Ham Spam Total

TREC05p English

39399 52790 92189

TREC06p English

12910 24912 37822

TREC07p English

25220 50199 75419

TREC06C

Chinese

21766 42854

Table 2. Experimental results

64620

Corpus TREC 05p
TREC 06p
TREC 07p
TREC 06C

Filter
LR Biased LR LR Biased LR LR Biased LR LR Biased LR

hm%
0.37 0.00 0.76 0.00 0.36 0.00 0.11 0.00

sm%
0.54 87.25 0.45 98.10 0.06 89.03 0.10 93.17

lam % 0.44 0.00 0.58 0.00 0.15 0.00 0.10 0.00

Accura cy (%)
99.54 50.04 99.44 35.38 99.84 40.74 99.90 38.21

1-AUC (%) 0.0124 0.0124 0.0308 0.0308 0.0054 0.0054 0.0013 0.0013

5. CONCLUSION
As a popular measure for the spam filtering performance, lam% is widely applied. However, this paper discloses that lam% fails when setting biased threshold. The suggestion is that other measures instead of the lam% should be focused for the spam filtering evaluation.

6. ACKNOWLEDGMENT
The research is supported by the Key Project of the National Natural Science Foundation of China (No. 60736044) and National Natural Science Foundation of China (No. 60873105).

7. REFERENCES
[1] G. Cormack, T. Lynam. TREC 2005 Spam Track Overview. TREC 2005. 2005
[2] J. Goodman, W. Yih. Online Discriminative Spam Filter Training. CEAS 2006. 2006
[3] G. Cormack. University of Waterloo Participation in the TREC 2007 Spam Track. TREC 2007. 2007.
[4] T. Joachims. A Support Vector Method for Multivariate Performance Measures. ICML 2005. 2005.
[5] H.B. Mann and D.R. Whitney. On a Test of Whether One of Two Random Variables Is Stochastically Larger Than the Other. Ann. Math. Statist., 18, 1947.

758

