Short Research Papers 3B: Recommendation and Evaluation

SIGIR '19, July 21­25, 2019, Paris, France

ABCPRec: Adaptively Bridging Consumer and Producer Roles for User-Generated Content Recommendation

Kosetsu Tsukuda, Satoru Fukayama, Masataka Goto
National Institute of Advanced Industrial Science and Technology (AIST), Japan {k.tsukuda,s.fukayama,m.goto}@aist.go.jp

ABSTRACT
In Web services dealing with user-generated content (UGC), a user can have two roles: a role of a consumer and that of a producer. Since most item recommendation models have only considered the role of a user as a consumer, how to leverage the two roles to improve UGC recommendation accuracy has been underexplored. In this paper, based on the state-of-the-art UGC recommendation method called CPRec (consumer and producer based recommendation), we propose ABCPRec (adaptively bridging CPRec). Unlike CPRec, which assumes that the two roles of a user are always related to each other, ABCPRec adaptively bridges the two roles according to the similarity between her nature as a consumer and that as a producer. This enables the model to learn each user's characteristics as both a consumer and a producer and to recommend items to each user more accurately. By using two real-world datasets, we showed that our proposed method significantly outperformed comparative methods in terms of AUC.
1 INTRODUCTION
User-generated content (UGC) is content created or produced by ordinary people rather than by professionals and distributed on the Web. Various types of UGC (videos, photos, discussion forums, etc.) exist on various Web services such as YouTube, Flickr, and Reddit. One characteristic of UGC is its fast content production rate compared to that of non-UGC [3]. Hence, item recommendation in UGC services is critical for helping users find their desired content in a large amount of available content. Another characteristic is the role of a user in UGC services. Unlike with traditional non-UGC services, a user can have two roles: a consumer and a producer. Users not only consume content but are also willing to produce content because, for example, they want to show their content to other users by sharing it on UGC services [10].
In consideration of such characteristics, Kang and McAuley [6] have recently proposed a UGC recommendation method called CPRec (consumer and producer based recommendation), which uses matrix factorization. In CPRec, each user has two vectors corresponding to two roles: consumer and producer. These vectors are created by linearly converting the user's core vector, which represents a kind of personality. The preference of the user toward an
Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than the author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org. SIGIR '19, July 21­25, 2019, Paris, France © 2019 Copyright held by the owner/author(s). Publication rights licensed to ACM. ACM ISBN 978-1-4503-6172-9/19/07. . . $15.00 https://doi.org/10.1145/3331184.3331335

item is computed based on the affinity between her and the item and the affinity between her and the producer of the item (see Section 2.2 for more details). Using UGC datasets, it has been shown that CPRec outperforms state-of-the-art methods [6].
Despite the effectiveness of CPRec, the user's consumer vector and producer vector are always bridged to the user's core vector; this decreases model's flexibility. For example, in CPRec, users who have same consumer vectors also have same producer vectors. However, in reality, even if two users are similar as consumers, they are not always similar as producers. More details of the problem will be described in Section 2.3.
In this paper, to overcome the limitations of CPRec, we propose ABCPRec (adaptively bridging CPRec). In ABCPRec, the user also has two vectors: a vector for the consumer role and that for the producer role. To make the model flexible, these vectors are not created from the core vector (i.e., the user does not have a core vector). Instead, we put the following constraint between two vectors: if the user's nature as a consumer is similar to that as a producer, the two vectors should be close. The more similar these natures are, the closer the vectors should be. If the user's nature as a consumer is completely different from that as a producer, the two vectors can have values independently of each other. That is, unlike CPRec, which always bridges the user's two vectors via her core vector, in ABCPRec, the two vectors are adaptively bridged according to the similarities between the consumer and the producer roles.
We evaluated ABCPRec on two publicly available datasets. The experimental results showed that ABCPRec could improve UGC recommendation performance compared to the state-of-the-art methods. More specifically, we showed that it was effective (1) to increase model's flexibility by eliminating the core vector from CPRec and (2) to adaptively add a constraint according to the similarity between the user's consumer and producer roles, which is computed based on the items produced and consumed by the user.

2 MODEL
In this section, we first introduce CPRec [6], which is the state-ofthe-art method for UGC recommendations. We then describe the limitations of CPRec and propose our model to overcome them.

2.1 Problem Description and Notation

Let U and I denote sets of users and items, respectively. Iu+ represents a set of items consumed by user u  U. In addition, let

C (i.e.,

U C

den{ote a = u |u

seUt ofcoInu+sum>e0r}s)w. IhnoUcoGnCsusmerevdicaetsl,eaalsltiotenmesitaerme

created by users; therefore, a set of producers who have produced

at least one item can be defined as P  U. Using the above data,

our goal is to generate a personalized ranked list of items for each user u from I \Iu+, which is a set of items that u has not consumed.

1197

Short Research Papers 3B: Recommendation and Evaluation

SIGIR '19, July 21­25, 2019, Paris, France

2.2 CPRec

To achieve this goal, Kang and McAuley [6] proposed a method

called CPRec. In CPRec, each user has a K-dimensional core latent vector u . Each user also has latent vectors uc and up that represent u's roles as a consumer and a producer, respectively. These

vectors are created based on u as follows:

uc = W cu , up = W pu ,

(1)

where W c and W p are K × K matrices; they are used to project u's

core vector to uc and up . Note that both W c and W p are shared

among all users. The preference of user u toward item i is then

computed as follows.

xui =  + u + i + uc , i  + uc , ppi ,

(2)

where  is the global offset, u and i are the user/item bias terms,

i is a K-dimensional latent vector of i, and pi is a producer of i. Unlike most of the non-UGC recommendation models that con-

sider users' role as consumers only [2], CPRec predicts the pref-

erence based on the affinity between the consumer and the producer of the item (uc , ppi ) in addition to the affinity between the consumer and the item (uc , i ). The parameters are learned based on Bayesian Personalized Ranking (BPR) [9], which is a pair-

wise ranking optimization framework and is designed to deal with

users' implicit consumption behaviors such as giving a "like" and

posting a comment rather than explicit ones such as rating.

2.3 ABCPRec

In CPRec, due to the assumption that each user has a core vector, uc and up are always bridged to u via W c and W p ; this leads to drawbacks in terms of flexibility. In their model, as the values of W c and W p are determined through parameter learning, both

matrices have their inverse matrices with overwhelming proba-

bility. This (i.e., up =

means W p (W

that c )-1

uc almost always converts uc ). In addition, because W

linearly to c and W p

up are

shared among all users, those users who have the same consumer

vectors also have the same producer vectors. However, it is less

reasonable because, in reality, even if two users are similar as con-

sumers, they are not always similar as producers. The same can be

said when they have the same producer vectors. Because of such

limitations, vectors may not have appropriate values through pa-

rameter learning. To overcome such drawbacks, we propose a new

preference prediction method called ABCPRec (adaptively bridg-

ing CPRec).

2.3.1 Score Prediction. In ABCPRec, user u also has Kdimensional latent vectors uc and up that correspond to u's

two roles (consumer and producer). Unlike CPRec, u does not

have a core vector, and there is no linear relationship between uc and up ; this guarantees flexibility of the model. The preference

score xui is computed as follows:

xui =  + u + i + uc , i  + uc , ppi ,

(3)

which is almost identical to Eq. 2 except for the vector representa-

tion.

2.3.2 Prameter Learning with Adaptive Bridging. We adopt a BPR

framework [9] to learn parameters. In BPR, the training set D used

for optimizing parameters is defined as follows:

D = {(u, i, j) | u  U  i  Iu+  j  I \ Iu+}.

(4)

That is, a triad (u, i, j) means that user u prefers item i to item j. In

BPR, the optimizationcriterion for D is given by:

ln  (xui j ) -  2,

(5)

(u,i,j) D

where  is the sigmoid function,  = {i , i , uc , up } represents all model parameters, and  is a regularization hyperparameter.
The xuij represents the difference between u's preference for i and that for j, which is defined as xuij = xui - xuj . In Eq. 5, there is no constraint between uc and up . In general, with the increase of the model complexity (i.e., the number of parameters), the risk of

model over-fitting also increases. Hence, it may not be effective

enough to increase model's complexity just by eliminating core

vectors from CPRec. In order for our model to learn parameters

more appropriately, we add more realistic constraints. To this end,

we assume that if u's nature as a consumer is similar to that as

amoprreodsuimceilra, ruuc'santwdonupatsuhroeusldarael,stohebecloclsoesre. ucInaontdheurp

words, should

the be.

That is, a constraint up according to the

should be similarity.

adaptively added between uc and Based on this idea, we revise Eq. 5

and

p ropose a new optimization ln  (xui j ) -  2

criter ion - s

as follows: sim(u)uc

-

up

2,

(6)

(u,i,j) D

u U

where s is a regularization hyperparameter and sim(u) is the similarity function. A large value of sim(u) indicates that the distance between uc and up should be smaller; this guarantees the adaptivity of the model.

2.3.3 Similarity Function. To compute sim(u), we propose the following two hypotheses:

Hypothesis 1 (H1): if users who like items consumed by u also consume items produced by u, uc and up should be similar.
Hypothesis 2 (H2): if users who like items produced by u also consume items consumed by u, uc and up should be similar.

The first hypothesis focuses more on u's consumed items while the

second one focuses more on u's produced items. Let Uuc and Uup

denote the users who consumed at least one item consumed and

produced by u, respectively. We assume users who like items consumed by u and

UUuucp

represents represents

the the

set set

of of

users who like items produced by u. Hence, the similarity function

reflecting H1 is given by:

sim(u) = |Uuc  Uup |/|Uuc |,

(7)

while the similarity function based on H2 is given by:

sim(u) = |Uuc  Uup |/|Uup |.

(8)

3 EXPERIMENTS

In this section, we answer the following three research questions through our experiments:

RQ1 To improve the model, is it appropriate to eliminate users'

core vectors in CPRec that cause the loss of model flexibility?

RQ2 up

Is it effective according to

to adaptively the similarity

add constraints between uc and between the user's two roles?

RQ3 If RQ2 is true, which hypothesis introduced in Section 2.3.3

is more effective for computing the similarity?

1198

Short Research Papers 3B: Recommendation and Evaluation

SIGIR '19, July 21­25, 2019, Paris, France

Table 1: Dataset statistics.

#users (|U|)

#items (|I|) Sum of consumed

items

 (u

|Iu+ |)

Consumer ratio (|C|/|U|)

Producer ratio (|P |/|U|)

Prosumer ratio (|C  P |/|U|)

Flickr 99,060 557,286 11,256,457 99.83% 40.82% 40.65%

Reddit 52,654 336,743 1,786,032 99.60% 87.24% 86.85%

3.1 Dataset
We used two publicly available datasets of UGC services.
· Flickr is a photo sharing service where users can share their personal photos. Users can mark other users' photos as "favorite." We use the dataset released by Cha et al. [4], which was crawled in 2006 and 2007. We regard the "favorite" action as consumption. Each photo is produced by a single user.
· Reddit is an online community where users can discuss various things using a bulletin board style interface. Users can submit textual content or links to the web content such as news articles. Users can also post comments on submitted content. We use the dataset released by Reddit1, which consists of all submissions and comments in March 2017. We regard each submission and commenting action as an item and consumption, respectively. Each submission is produced by a single user.
Following Kang and McAuley [6], users who consumed or produced fewer than 10 items and items consumed by fewer than 10 users are discarded. Table 1 shows the dataset statistics. In the table, a "prosumer" means a user who produced and consumed items. As can be seen, although the consumer ratios are almost the same in both datasets, the producer ratio and the prosumer ratio on Flickr are much lower than those on Reddit.

3.2 Comparisons

As is the case with Kang and McAuley [6], we use the following baseline methods2.

· PopRec: this method is not personalized and ranks items ac-

cording to their popularity.

· BPR [9]: this method considers only the consumer-item pref-

erence. The preference score is computed by:

xui =  + u + i + uc , i .

(9)

· Vista [5]: in this method, each user has two latent vectors uc

and u . The xui is then given by:

xui = uc , i  + u , pi .

(10)

That is, this method uses different vectors for computing u's

affinity with i and u's affinity with pi . · Factorization Machines (FMs) [8]: this method can deal with

interactions between consumers, producers, and items. We use

the second-order estimator of FMs as follows:

xui =  + u + i + pi + uc , i  + uc , ppi  + i , ppi . (11)

Note that in these baselines, there is no constraint between vectors.

We also use the following comparative methods.

1 https://www.reddit.com/comments/6607j2 2 As mentioned by Kang and McAuley [6], since social network of users is not always available on UGC services, we also do not use socially-aware methods such as SBPR [11] for comparison. Rather, in our experiments, we focus more on how to
leverage users' two roles to improve UGC recommendations.

· CPRec [6]: this is the state-of-the-art method for UGC recom-
mendations. The details can be seen in Section 2.2. · NBCPRec: this method does not put a constraint between uc
and up . That is, the preference score is computed by Eq. 3 and the optimization criterion is given by Eq. 5. NBCPRec means
no-bridging CPRec.
Regarding our proposed model, models computing similarity with Eq. 7 and 8 are called ABCPRecH1 and ABCPRecH2, respectively.

3.3 Evaluation Methodology

For each user, we split Iu+ into training/validation/test sets. To this end, we randomly select one consumed item (i.e., i  Iu+) for validation Vu and another for testing Tu . All the remaining items are
used for training Ru . We carry out this random selection indepen-

dently five times and report the average results in Section 3.4. For

a fair comparison, the same five training/validation/test sets are

used for all methods. The recommendation performance is evalu-

ated by the AUC (Area Under the ROC Curve):

AU C

=

1 |U|


u U

1 |Du |

 
(i ,j) Du

( xui

) > xuj ,

(12)

where Du = {(i, j) | i  Tu  j  I \ Iu+}, and  (a) is 1 when a is

true and 0 otherwise. For all methods, we use Tensorflow [1] with

Adam optimizer [7] to learn model parameters. The regularization

hyperparameters are tuned on a validation set in terms of the AUC,

where the hyperparameters are selected from {0.0001, 0.001, 0.01,

0.1, 1}. We set the learning rate to 0.01.

3.4 Experimental Results
Table 2 shows the comparative results for latent dimensionality K = 20, 50, and 80 with the results of Tukey's HSD test. It can
be observed that even NBCPRec, which has no constraint between uc and up , significantly outperforms CPRec in both datasets. According to these results, the answer to RQ1 is that eliminating core
vectors from CPRec is certainly effective for improving UGC recommendation performance. We can also see that ABCPRecH1 and ABCPRecH2 demonstrated better performance than CPRec and
NBCPRec. These results confirm the effectiveness of adaptively bridging uc and up rather than always bridging roles (CPRec) and not bridging roles at all (NBCPRec); this is the answer to our RQ2.
Because ABCPRecH2 outperforms ABCPRecH1 in both datasets
at all Ks, the following answer to our RQ3 can be given: when
we compute similarities between the user's nature as a consumer
and that as a producer, H2 (which focuses more on the user's pro-
duced items) is more effective. To analyze why H2 is better than
H1, we show in Table 3 the distribution of similarity scores com-
puted by each hypothesis. In both datasets, the ratio of users who have no constraints between uc and up (i.e., sim(u) = 0) is almost the same in both hypotheses. However, in H1, most of the remaining users have 0 < sim(u)  0.1; while in H2, they are moderately dispersed in 0 < sim(u)  1.0 on Flickr, and most of them have 0.9 < sim(u)  1.0 on Reddit. Hence, stronger constraints between uc and up were appropriately added in H2, which led to better performance. We also analyze similarities in users' tastes for items in Uuc and Uup . To this end, for arbitrary user pairs in Uuc , we count the number of items consumed by both users. Higher val-
ues indicate that both users have similar tastes for the consumed

1199

Short Research Papers 3B: Recommendation and Evaluation

SIGIR '19, July 21­25, 2019, Paris, France

Table 2: Performance comparison in terms of the AUC for latent dimensionality K = 20, 50, and 80. Significant differences ( = 0.01) with PopRec, BPR, Vista, FMs, CPRec, NBCPRec, and ABCPRecH1 are indicated by , , , , , , and , respectively.

Dataset K PopRec BPR Vista FMs CPRec NBCPRec

ABCPRecH1

ABCPRecH2

20 0.6737 0.8698 0.8436 0.8764 0.8563 0.8839  0.8861  0.8900 

Flickr 50 0.6737 0.8772 0.8435 0.8822 0.8664 0.8937  0.8949  0.8992 

80 0.6737 0.8777 0.8394 0.8810 0.8712 0.8955  0.8988  0.9028 

20 0.6392 0.8713 0.8829 0.8960 0.9138 0.9209  0.9296  0.9340 

Reddit 50 0.6392 0.8721 0.8918 0.8999 0.9201 0.9302  0.9346  0.9391 

80 0.6392 0.8709 0.8946 0.9001 0.9211 0.9322  0.9376  0.9408 

Table 3: Distribution of sim(u).

sim(u) = 0 0 < sim(u)  0.1 0.1 < sim(u)  0.2 0.2 < sim(u)  0.3 0.3 < sim(u)  0.4 0.4 < sim(u)  0.5 0.5 < sim(u)  0.6 0.6 < sim(u)  0.7 0.7 < sim(u)  0.8 0.8 < sim(u)  0.9 0.9 < sim(u)  1.0

H1 Flickr Reddit 62.70% 13.77% 36.46% 47.34% 0.54% 10.68% 0.08% 6.54% 0.02% 4.39% 0.01% 2.93%
0.0% 2.93% 0.0% 2.2% 0.0% 1.63% 0.0% 1.33% 0.17% 6.25%

H2 Flickr Reddit 62.87% 14.17% 2.93% 0.82% 4.92% 1.79% 5.25% 2.67% 4.78% 2.97% 4.53% 2.76% 4.71% 5.56% 4.07% 6.21% 3.21% 6.79% 2.02% 9.68% 0.72% 46.59%

items. We Uup . Fig. 1

did this process for all shows the distribution

users' of the

Uuc . user

The same pair ratio

goes for on Red-

ditietm. IsnaUt aucl,l.aIlnmUosupt

half , the

of the ratios

user pairs do not consume the same of user pairs with  2 (which means

that both users have relatively high similarity in taste) are always

higher than those in Uuc , and as many as 14.06% of the user pairs

consumed more than 10 of the same items. A similar tendency was

vTfoehurasntediisonwntehFrlymicHksr2o.,fTwihtheemiscehtraefosstuceulstssweisnhmdilieocaruetseeotrnhsaUitnuupUs,euwprsahisanavUbelusecimtaorielaamdrdotamrsetodersie-.

reliable constraints and outperform H1.

Finally, Fig. 2 plots the transition of the AUC for all methods except PopRec. It can be observed that ABCPRecH2 achieved the best

performance for any K in both datasets. Its performance is almost

saturated when K is 80 on Flickr and 60 on Reddit. FMs is similar to

NBCPRec in that FMs also considers the affinity between the con-

sumer and the item and the affinity between the consumer and the item's producer without bridging uc and up . However, NBCPRec always outperforms FMs. This result indicates that it is not ef-

fective to consider the affinity between an item and its producer (i , ppi  in Eq. 11) for UGC recommendations. As mentioned in Section 3.1, the producer ratio and prosumer ratio on Flickr are rel-

atively low. In such a dataset, the performance of CPRec is below

the baselines (BPR and FMs). On the other hand, our model works

well in both datasets; this shows the versatility of our model.

4 CONCLUSION
This paper proposed a method that considers two user roles and adaptively bridges them according to the similarity between the user's nature as a consumer and that as a producer. The experimental results showed the effectiveness of our method, especially when the user's similarity was computed with a focus on users

50%

1

2

40%

30%

20%

10%

0%

0

1

2

3

4

5

6

7

8

9 10 > 10

Figure 1: Distribution of user pair ratio in Reddit. (x-axis:

the number of items consumed by both users in a user pair)

BPR Vista FMs CPRec NBCPRec ABCPRecH1 ABCPRecH2

0.905

Flickr

0.945

Reddit

0.895 0.885

0.925

0.875

0.905

0.865 0.855

0.885

0.845

0.865

10 20 30 40 50 60 70 80 90 100

10 20 30 40 50 60 70 80 90 100

Figure 2: Transition of the AUC associated with latent di-

mensionality K. (x-axis: K, y-axis: AUC)

who like items produced by the user. As future work, using visual features (e.g., colors) and textual features (e.g., tags) of items produced and consumed by the same user is another possible approach to compute similarity between the user's two roles. We also plan to extend our method by adding constraints, for example, on the similarity between two users in terms of their producer roles.

[Acknowledgments] This work was supported by JSPS KAKENHI Grant Number 17K12688 and JST ACCEL Grant Number JPMJAC1602, Japan.

REFERENCES
[1] M. Abadi et al. Tensorflow: A system for large-scale machine learning. In OSDI, pages 265­283, 2016.
[2] J. Bobadilla et al. Recommender systems survey. Knowledge-Based Systems, 46:109­132, 2013.
[3] M. Cha et al. I tube, you tube, everybody tubes: analyzing the world's largest user generated content video system. In IMC, pages 1­14, 2007.
[4] M. Cha et al. A measurement-driven analysis of information propagation in the flickr social network. In WWW, pages 721­730, 2009.
[5] R. He et al. Vista: A visually, socially, and temporally-aware model for artistic recommendation. In RecSys, pages 309­316, 2016.
[6] W. C. Kang and J. McAuley. Learning consumer and producer embeddings for user-generated content recommendation. In RecSys, pages 407­411, 2018.
[7] D. P. Kingma and J. Ba. Adam: A method for stochastic optimization. In ICLR, 2015.
[8] S. Rendle. Factorization machines. In ICDM, pages 995­1000, 2010. [9] S. Rendle et al. BPR: Bayesian personalized ranking from implicit feedback. In
UAI, pages 452­461, 2009. [10] A. Wilson et al. Hospitality and travel: The nature and implications of user-
generated content. Cornell Hospitality Quarterly, 53(3):220­228, 2012. [11] T. Zhao et al. Leveraging social connections to improve personalized ranking
for collaborative filtering. In CIKM, pages 261­270, 2014.

1200

