Session 5A: Retrieval Models and Ranking 3

SIGIR'17, August 7-11, 2017, Shinjuku, Tokyo, Japan

Personalized PageRank in Uncertain Graphs with Mutually Exclusive Edges

Jung Hyun Kim
Arizona State University Tempe, AZ 85287 jkim294@asu.edu

Mao-Lin Li
Arizona State University Tempe, AZ, USA 85287
maolinli@asu.edu

K. Sel¸cuk Candan
Arizona State University Tempe, AZ, USA 85287
candan@asu.edu

Maria Luisa Sapino
University of Torino I-10149 Torino, Italy mlsapino@di.unito.it

ABSTRACT
Measures of node ranking, such as personalized PageRank, are utilized in many web and social-network based prediction and recommendation applications. Despite their e ectiveness when the underlying graph is certain, however, these measures become di cult to apply in the presence of uncertainties, as they are not designed for graphs that include uncertain information, such as edges that mutually exclude each other. While there are several ways to naively extend existing techniques (such as trying to encode uncertainties as edge weights or computing all possible scenarios), as we discuss in this paper, these either lead to large degrees of errors or are very expensive to compute, as the number of possible worlds can grow exponentially with the amount of uncertainty. To tackle with this challenge, in this paper, we propose an e cient Uncertain Personalized PageRank (UPPR) algorithm to approximately compute personalized PageRank values on an uncertain graph with edge uncertainties. UPPR avoids enumeration of all possible worlds, yet it is able to achieve comparable accuracy by carefully encoding edge uncertainties in a data structure that leads to fast approximations. Experimental results show that UPPR is very e cient in terms of execution time and its accuracy is comparable or be er than more costly alternatives.
1 INTRODUCTION
Measures of node ranking are used in many web and social media based prediction and recommendation applications [6, 24, 27].
ere are several ways to rank nodes in a graph ranking, including the well known personalized PageRank (PPR) measure [9, 18], which weights the nodes in a given graph based on their positions relative to a given seed set of nodes (Section 2).
 is work has been funded by NSF grants #1339835, #1318788, #1610282, #1633381, and the EU-H2020 grant #690817.
Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for pro t or commercial advantage and that copies bear this notice and the full citation on the rst page. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permi ed. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior speci c permission and/or a fee. Request permissions from permissions@acm.org. SIGIR '17, August 07-11, 2017, Shinjuku, Tokyo, Japan © 2017 ACM. 978-1-4503-5022-8/17/08. . . $15.00 DOI: 10.1145/3077136.3080794

James Adams - Wikipedia

https://en.wikipedia.org/wiki/James_Adams James  Adams  

James Adams
From Wikipedia, the free encyclopedia

James Adams may refer to:

James Adams (Jesuit) (1737­1802), English philologist James Adams (MP) (1752­1816), British Member of Parliament and Lord of theJAamdems  Aidraamltsy   James Adams (lawyer) (1783­1843), American lawyer and intimate friend of the Joseph Smith, Jr., founder of the Latter Day Saint movement
(aJ)amAesmAdbamigs u(Miatsysacihnusedttsaptoalitician) (1810­1880), ma(ybor)ofUChnacrleestrotwani, nMaessdacghuesetts James "Grizzly" Adams (1812­1860), American hunter, basis of a television program James Hopkins Adams (1812­1861), American governor of South Carolina James William Adams (1839­1903), Irish recipient of the Victoria Cross
FigurJeam1es:BaArtomn Abdaimgsu(1i84t3y­19i1n8),Wcowibkoyippoeet dia and its potential impact on thJJeaammpeessrFTo.ruAxsdloaiwmmsA(di1at8m4y4s/­(1c198l27u28)­s,1At9m4e9er)r,icAaamnneCraiicvlailnyWhsiasirtosMrieadnal of Honor recipient
James Luther Adams (1901­1994), American theologian James Adams (bishop of Barking) (1915­1999), fifth Bishop of Barking, 1975­1983
DesJapmietseL.tAhdeamirs (e1921e­c2t01iv4)e, Anmeesriscanwpohlieticnianthe underlying graph is certain, James B. Adams (born 1926), former attorney, Texas legislator, and acting director of the Federal
these Bmureeaausouf Irnveesstigbaetiocnome di cult to apply in the presence of graph uncerJJtaaammieenss BBti.. eAAsddaa,mmass ((scporomtfhepsosesoeyrr)),,pEarnorgfeelissshonrcooatmtAprodiszeoern,saoirSggtaannteiseUt,dnainvdefrcoseitlrylistgraphs that include uncertJJaaammieenss AMidn.aAfmdosarm(dmsipJlrao.m(tbiaoot)rnn(b1.o9r4nU81)n,9E3f2po)is,rcBotrpuitailnshbaidsthipoelpolmyina,At imnermicaany real world web and social-JinmeAtdwamos r(mkusbicaiasne) (dboarnp1p96l7i)c, Aamtieoricnans,heiatvymmaetyal gnuiotatrisbt e possible to obtain a perfecJWtam.aJeansmWdes. AAcddoaammmss,,pcDalerepptuenteyteCsr,htbireufuilTdceecrthuannordleodgeoissitgfnatetrNhiAneSKAuenntudckeyrlying knowledge graph for vaJJraaimyoBeusoRysoAwrdeeamAasdsa(obmonsr,nsfo1:u9n4d9e),rsioisfngthmeer,Csaoeynngtewbr rfeioterrdP, rauongderegsutsioitvaerilCsathbcroiksrtniaJonaimftyeisnWfaollracme Aadtamios n, noise in datJaamceos Alldeamcsti(eonntre,proenreupr)r, Aivmaercicyan cauothnorcaendrenntsrep[r1en7eu]r.
IMn sopsotretsxisting works on graph uncertainty consider existence uncertainty, where a given edge exists probabilistically and the
James Adams (cricketer, born 1811) (1811­1851), English cricketer
existeJnamcees Apdramosb(caribckieltietr,ibeosrn 1o9f04t)h(1e904i­n19d8i8v),iAduustraallianecdrigckeetser are assumed to be indepJJeaanmmeedss eAAnddaatmmssf((rcforoiocmtkbeatlelere,r,babocornrhn11988o60t4))h(b(1eo8rrn641­[912890,4)3,1)E,n0Sgc,loist1htis6chr,ifcok2oet0tbear,lle2r6, 29]. In practice, howevJJaaemmree,ss tAAhddaaimmsssa((ffsoooosttubbaamlllleerrp,, bbtooirronn 11n8990d68))o((11e89s9068­­n11o9978t33))a,, EElwnnggllaiisshhyffsoooohttbbaaollllleedrr ww: hhwoo ppellaayymeedd affooyrr CWbheesesttearfiweldare of theBeroxmiwsitceh nAlcbieonof an edge, but we may not know between which pairs JJoiimmf AAnddaaommdss e((blasacsreotbshaslele)) ((b1eo8dr6n8g­c.?e)1,9Ae29mx)e,irAsicmtanser.bicaasFnebocaolrlllepgleaeyxleaarcrmosspe cloea,chwe may be able to deducJeimtAhdaamtso(soncceero) (fbotrnh1e96s9)e, Evneglrisahlsofcrceirepnladyesr of an individual in a social
network may be his/her father, but we may not know which friend. 1 of A2 s another example, we may know that a name referred to in a web 1/24/17, 5:25 PM
document is one of the many named entities in a knowledge base,
but we may not know which one is the correct entity (Figure 1(a)).
In this paper, we propose an uncertain edge model with mutual exclusion that can handle such general forms of uncertainty1 and
consider the node ranking problem in the presence of such edges.
Obtaining node rankings in such a graph is di cult because ad-
dition or removal of one single edge can have a drastic e ect on
proximity [11]: e.g., addition of just one edge may be su cient to

1For relational data, this type of uncertainty is also known as "partial maybe null", where one is not sure if the a ribute has a value or not, but if the value exists, then it must be within a speci ed set[1, 7]

525

Session 5A: Retrieval Models and Ranking 3

SIGIR'17, August 7-11, 2017, Shinjuku, Tokyo, Japan

link two otherwise distant node clusters, thereby signi cantly altering the proximities of a large number of pairs of nodes in the graph (Figure 1(b)). A naive way to deal with this would be to measure expected node proximities by taking into account the likelihoods of di erent interpretations and the node proximity measurements corresponding to each interpretation: one can
(1) rst enumerate all possible interpretations (or possible worlds) of the uncertain graph, where each interpretation is a possible certain graph;
(2) compute node proximity under each possible world; and (3) nally, combine all these node proximity measurements
into a single expected proximity value.
It is, however, easy to see that an exhaustive enumeration based approach will quickly become intractable since (as we see in Section 3) the number of possible worlds can grow exponentially with the amount of uncertainty in the graph. To tackle this challenge, in this paper, we propose an e cient Uncertain Personalized PageRank (UPPR) algorithm to approximately compute personalized PageRank values on an uncertain graph with edge uncertainties. UPPR avoids enumeration of all possible worlds, yet it is able to achieve comparable accuracy by carefully encoding edge uncertainties in a data structure that leads to fast approximations. Experiment results show that UPPR is very e cient in terms of execution time (multiple orders faster than other algorithms with similar accuracy) and its accuracy is close to perfect.
In the next section, we discuss the related literature. In Section 3, we introduce the uncertain graph model. In Section 4, we discuss alternative "naive" techniques and discuss their individual shortcomings. en, in Section 5, we present the proposed e cient and e ective uncertain personalized PageRank (UPPR) technique. We evaluate the various techniques discussed in the paper in Section 6 using several data sets and conclude in Section 8.
2 RELATED WORKS
2.1 Graphs with Uncertainty
Uncertain graphs are common in many applications. For example, in biological protein interaction networks, uncertainty may be introduced when the existence of certain interactions are o en only statistically probable [16, 20]. In communication networks, possibility of link failure needs to be accounted for in nding stable and reliable paths for packet delivery with minimum cost: this involves taking into account several forms of uncertainty, including existence uncertainty, ambiguity, and confusion on edges [10].
In web-based applications, such as social networks, uncertainties may exist due to inherent lack of prior knowledge regarding the existence of friendship or in uence ow among the users in the underlying network [17] and it may be critical to take into account such forms of uncertainty in predicting which nodes are likely to be connected to which other nodes [24]. Other graph analysis operations that are a ected from graph uncertainty include shortest paths, reachability analysis, and subgraph searching. A common challenge is that, in the presence of uncertainty, (already expensive) graph operations becomes more expensive. [8] presented an interval labeled edge model and discussed e cient computation of minimum paths and trees on such uncertain graphs without having to enumerate all possible worlds. [26] and [29] also focused

on shortest paths, but on graphs where edges have probabilistic interpretations for existence in uncertain graphs. Given edges that are accompanied with the probability of existence, [16, 20] propose ways to compute reliability and reachability e ciently through Monte-Carlo sampling. [30] proposed pruning techniques to reduce the complexity of subgraph searching and subgraph pa ern mining in uncertain graphs by avoiding enumeration of all possible worlds of the uncertain graph.

2.2 Node Ranking in Uncertain Graphs

PageRank is a widely-used measure to compute node importance /

signi cance in a graph [5]. It takes into account the connectivity

of nodes in the graph by de ning the score of the node i  V as the amount of time spent on i in a su ciently long random walk
on the graph. e personalized PageRank (PPR) [9, 18] technique

extends this in a way that takes into account the context de ned

by a given set of important nodes: given a the PPR scores can be represented as a

set of seed vector r ,

wnohdeerseSr

V, =

T r + (1 - ) s , where s [i] =

1 S

if

i  S and s [i] = 0,

otherwise. Intuitively, given a set of nodes S  V , instead of jumping

to a random node in V with probability (1 - ), the random walk

jumps to one of the nodes in the seed set, S. Since we constrain the

teleportation jumps from any node in the graph to only the given

set of important seed nodes, then the random-walk spends more

time on nodes that are close to the seeds and, thus, those nodes are

declared more signi cant based on the context de ned by the seed

nodes. Due to the cost of obtaining exact PPR scores, non-exact

solutions (based on low rank decomposition [28] or Monte Carlo

methods [22]) have been proposed.

Several works considered the problem of ranking on graphs with

di erent forms of uncertainties. [13] considered PageRank when

web graphs contain erroneous link information and proposed an ap-

proximate solution using interval matrices ­ the proposed approach

captures the PageRank scores of the nodes a ected by fragile links

in terms of lower and upper bounds of PageRank values. A di erent

node-centric uncertain graph model and node ranking approach are

presented in [23]: in particular, [23] collapses the uncertain parts of

a graph into a cloud graph, where the end of every undetected link

is connected to this cloud graph and computes PageRank scores on

this transformed graph. [12] considered uncertain graphs, where

edges are annotated with existence probabilities and extended the

SimRank measure [14] under probabilistic interpretations of edge

existence and transition matrices.

In this paper, we propose a more general uncertainty model

(of which the existence uncertainty considered by the works listed

above is special case) and discuss e cient ways to compute PPR

under this more powerful model.

3 PROBLEM FORMULATION
Let G = (V , E) be a directed graph with a set, V , of nodes and a set, E, of edges. Conventionally, each edge e  E is de ned using two nodes in the graph: a source node source(e)  V and a target node tar et(e)  V . In this paper, on the other hand, we divide the graph edges into certain and uncertain edges.
De nition 3.1 (Certain edges). A certain edge e+  E has well de ned source and target nodes, source and dest . We denote

526

Session 5A: Retrieval Models and Ranking 3

SIGIR'17, August 7-11, 2017, Shinjuku, Tokyo, Japan

(1)

(2)

(3)

Figure 2: A graph with certain and uncertain edges

this with source(e+) = { source } and tar et(e+) = { dest }. We denote the subset of E consisting of E's certain edges as E+. 

In Figure 2, e+(1) = { i , a } is a certain edge from i to a . Note that, since source(e+) = tar et(e+) = 1, this edge type does not include any uncertain information. In this paper, we refer to
this certainty as having a unique possible world. Each uncertain
edge, on the other hand, can represent multiple possible worlds:

De nition 3.2 (Uncertain Edges). An uncertain edge e-  E has a well de ned source node but does not have a well de ned target node.2 More speci cally, we have

 source(e-)  V ,  tar et(e-)  V  {} and tar et(e-)  {}, and  source(e-) = 1 and tar et(e-) > 1.

Above  denotes a non-existing node. We denote the subset of E

consisting of all of E's uncertain edges as E-.



Figure 2 includes two uncertain edges, e-(2) and e-(3) with di erent degrees. e uncertain edge e-(3) captures a form of uncertainty with mutual exclusion among the edges from i to d , e , or f . is uncertainty, however, is independent from the existence uncertainty
of e-(2) . erefore, the proposed model allows as a special case the independent existence uncertainty model considered by many of the
existing works [2, 10, 16, 20, 26, 29].

3.1 Possible Worlds of an Uncertain Edge
Each uncertain edge implicitly de nes multiple possible worlds in which di erent interpretations are valid:

De nition 3.3 (Possible Worlds of an Edge under Mutual Exclusion
Semantics). Let e  E be an edge. Let source(e) denote a source node of the edge and let tar et(e)  V  {} denote the potential targets of the edge. Given this edge, we de ne all possible worlds
covered by this edge under mutual exclusion semantics as

pwunique (e) =  i , j  ( i = source(e))  ( j  tar et(e))

e possible worlds covered by an uncertain edge consist of all com-

binations of target nodes; if a target node is potentially non-existent,

then it is also a possible world. pwunique (e) = tar et(e) is

the number of possible worlds on the edge, e



2Due to space constraints, in this paper we only deal with the case of uncertainty in the target nodes, while we consider the edges' source nodes as given.

In the example visualized in Figure 2, there are three possible worlds
de ned by e-(2) (= { i , b ,  i , c ,  i , } ­ the last one implying that this edge does not exist) and four possible worlds de ned
by e-(3) (= { i , d ,  i , e ,  i , f ,  i , } ­ again the last one implying that this edge does not exist).
Note that under a more general interpretation, more than one of
the potential combinations, implied by the uncertainty encoded in
the edge, may be possible in the real world.

De nition 3.4 (Possible Worlds of an Edge under Multiple Edge Se-

mantics). Let e  E be a certain or uncertain edge and pwunique (e) be the corresponding possible worlds covered by this edge under

mutual exclusion semantics. Given this edge, we de ne all possi-

ble worlds covered by this edge under multiple edge semantics as all possible non-empty subsets of its target set3. Note that, since a

possible world containing  is equivalent to the world where  has

been removed, we have

pwmultiple (e)

=

22((pp

wu wu

ni ni

qu qu

e e

(e (e

) )

-1), ) - 1,

  target(e) otherwise 

Under these semantics, in the example in Figure 2, there would be 2(3-1) = 4 possible worlds de ned by the uncertain edge e-(2) and 2(4-1) = 8 possible worlds de ned by e-(3) . For the certain edge e(1), this gives 2(1-1) = 1 possible world.

3.2 Possible Worlds of a Graph
Given the above de nitions, we can now de ne the possible worlds of a graph with uncertainty:

De nition 3.5 (Possible Worlds of a Graph). Let G = (V , E) be

a directed graph which has a set of nodes V and a set of edges E.

For all e  E, let pw(e) denote the possible worlds (under mutual

exclusion or multiple edge semantics) of the edge e. We de ne all

possible worlds covered by this graph as the Cartesian product of the

possible worlds of edges: pw(G) = eE pw(e).



If we reconsider Figure 2, under mutual exclusion semantics, this
graph would have 1 × 3 × 4 = 12 possible worlds. In contrast, under the multiple edge semantics, the graph would have 1 × 4 × 8 = 32 possible worlds. Since uncertain edges have  2 possible worlds, it is easy to see that the size of the pw(G) grows exponentially in the number of uncertain edges; i.e., pw(G) is O(2 E- ).

3.3 PPR under Uncertainty
We now de ne personalized PageRank under uncertainty.

De nition 3.6 ( Personalized PageRank under Uncertainty). Let

G(V , E) be an can de ne the

uncertain graph. Given a seed set, S, of nodes we personalized PageRank vector, r , for G as follows:

r = AV G PPR(Gi , S),
Gi pw (G)

where G and

Gi denotes a possible world implied PPR(Gi , S) returns a personalized

by the uncertain graph PageRank vector, r i ,

corresponding to Gi and seed set S.



3 is can be extended to the case where there is a constraint in the number of real edges an edge can potentially represent.

527

Session 5A: Retrieval Models and Ranking 3

SIGIR'17, August 7-11, 2017, Shinjuku, Tokyo, Japan

T1

... T2

Tn

conventional personalized PageRank

PPR1

... PPR2

PPRn

Average
PPR

(a) exhPPR

W11 W11

W12 W22

W1n W2n

B_LIN personalized PageRank

PPR1

... PPR2

PPRn

Average
PPR ( Ti = W1i + W2i)
(b) exhApxPPR

...

T1

T2

... Tn

Average
T'

conventional personalized PageRank

PPR
(c) collPPR

T1

T2

... Tn

Average
T'

W1

W2

B_LIN personalized PageRank

PPR
(d) collApxPPR

...

W11 W12

W1n

W21 W22

W2n

Average
W1

Average
W2

B_LIN personalized PageRank

...

Flattening uncertain edges into certain edges
T''
conventional personalized PageRank

Flattening uncertain edges into certain edges
T''

W1

W2

B_LIN personalized PageRank

PPR ( Ti = W1i + W2i)

PPR

PPR

(e) collApx2PPR

(f) atPPR

(g) atApxPPR

Figure 3: Alternative (naive) approaches for computing PPR values on an uncertain graph

Intuitively, under the assumption that all possible worlds are equally likely, the above de nition of personalized PageRank corresponds to the expected4 values of the node scores.
4 "NAIVE" APPROACHES
In this section, we present several (naive) approaches for computing PPR values on an uncertain graph (Figure 3):
4.1 Exhaustive Approaches
e most straightforward way to obtain the PPR values on an uncertain graph is to exhaustively enumerate all possible worlds, compute the PPRs for each possible world, and combine (i.e., average) the results. Obviously this exhaustive approach (exhPPR), visualized in Figure 3(a), is likely to be very expensive as it involves potentially exponential number of PPR computations.
One way to alleviate this cost is to rely on a fast approximate PPR technique (such as B LIN [28], which partitions the given graph into subgraphs and pre-processes intra-partition edges, W1, and interpartition edges, W2, on these subgraphs in a post-processing phase) to obtain PPR scores for each possible world (Figure 3(b)). Note that, while this exhaustive approximate approach, which we refer to as exhApxPPR, is likely to be faster than the basic approach, since it involves exponential number of (approximate) PPR computations, it is still likely to be prohibitively expensive.
4.2 Collapsing-based Approaches
Since the major cost of the exhaustive approach is the number of exhaustive PPR computations, one way to reduce the cost would
4 is can be extended to cases where each possible world has a di erent likelihood.

be to enumerate all possible transition matrices corresponding to all possible worlds of the uncertain graph and then collapse these transition matrices into a single transition matrix by taking their average. A er this, we can obtain the nal PPR scores either by solving an exact PPR (collPPR, Figure 3(c)) or approximate PPR (collApxPPR, Figure 3(d)) problem.
Another alternative is to rst partition each individual transition matrix of each possible world, Gi , and then collapse the intrapartition, W1i , and inter-partition, W2i , transition matrices for all possible worlds into an inter-partition and an intra-partition matrix to be processed using B LIN[28] and combined in a post-processing phase. In Figure 3(e), we refer to this pre-partitioning based alternative approach as collApx2PPR.
Accuracy Problem with Collapsing: e collapsing based approach can lead to relatively large errors when uncertainty is concentrated around nodes with large PPR scores: Let G be an uncertain graph with two possible worlds with transition matrices, T1 and T2, respectively. Given these, we can compute the expected PPR scores as de ned in the previous section as
r = ( r 1 + r 2) 2 =  T1 r 1 + T2 r 2 2 + (1 -  ) s ,
where s is the teleportation vector for the seeds. In contrast, when using the collapsing based approach we instead compute
r  =  ((T1 + T2) 2) r  + (1 -  ) s .
Given these, the error term, e = r - r  can be obtained as
e =  T1 r 1 + T2 r 2 2 -  ((T1 + T2) 2) r .

528

Session 5A: Retrieval Models and Ranking 3

SIGIR'17, August 7-11, 2017, Shinjuku, Tokyo, Japan

a

d

1/3

b

+7/36 1/12

e

1/12

1/9 i

c 1/9

1/12 f

Figure 4: Flattening of the uncertain graph in Figure 2 into an (approximate) certain graph

Assuming that this error term is relatively small; i.e., can replace r  with r = ( r 1 + r 2) 2, to obtain

r



r ,

we

e   T1 r 1 + T2 r 2 2 -  ((T1 + T2) 2) r 1 + r 2 2  ((T 1 - T 2) 4) r 1 + ((T 2 - T 1) 4) r 2.

In other words, the error term is especially large when the uncertainties (i.e., di erences between the transition matrices of the possible worlds) are concentrated around nodes with large PPR scores.
Execution Time Problem with Collapsing: Since they reduce the number of PPR computations to just one, the collapsing based approaches are likely to be much faster than the exhaustive approach. Nevertheless, since it involves the enumeration of all possible worlds before obtaining the collapsed transition matrix, the cost is still exponential in the number of uncertain edges.

4.3 Flattening-based Approaches

An alternative approach to avoid the enumeration cost of collapsing is to approximate the collapsed transition matrix by constructing it directly from the uncertain graph G by a ening each uncertain edge into certain edges. Let i be a node with c outgoing certain edges and u outgoing uncertain edges. To a en the outgoing edges of a node i , we do the following:

(1) Each outgoing certain edge is associated with 1 (c + u) transition probability.
(2) Let e- be an outgoing uncertain edge, with t targets
(a) each non- target of e- is given a transition probability
of (1 t) × (1 (c + u)) (b) if  is a target for e-, then the corresponding (1 t) ×
1 (c + u) transition probability is distributed among the c certain edges of i ; if the vertex does not have any outgoing certain edges, then the probability is
re-distributed among all the nodes in the graph.

See [19] for details. For instance, in the example visualized in

Figure 2, since there are three outgoing edges, the probabilities of

outgoing edges for

i

would

be

set

as

1 3

on

the

edge

going

to

a,

1 3

×

1 3

=

1 9

on the edge going to

b and

c , and

1 3

×

1 4

=

1 12

on the edge

going to d , e , and f . Note that, when  is selected for any of the

outgoing edges, the only available traversal direction is towards a .

erefore, this would lead to an additional transition probability of

1 9

+

1 12

(=

7 36

)

towards

a.

is is visualized in Figure 4.

Once the a ened transition matrix is obtained, we can solve

the nal PPR scores either using an exact PPR ( atPPR, Figure 3(f))

or an approximate PPR ( atApxPPR, Figure 3(g)) technique. Note that, while they are likely to be faster than both exhaustive and collapsing-based approaches, a ening-based solutions further compound the accuracy problems.

5 UPPR: PROPOSED APPROACH
We propose an e cient and e ective Uncertain Personalized PageRank (UPPR) algorithm to approximately compute personalized PageRank values on an uncertain graph with edge uncertainties. In particular, UPPR avoids enumeration of all possible worlds, yet is able to achieve high accuracy by carefully encoding edge uncertainties in a data structure that leads to good approximations.

5.1 Special Case: Two Possible Worlds

Let G(V , E) be an edge uncertain graph, Let us split G(V , E) into

two subgraphs: a subgraph, Gc (V , Ec ), consisting of certain edges,

and a subgraph, Gu (V , Eu ), consisting of uncertain edges. Let us rst consider the special case where Gu (V , Eu ) de nes only two
possible worlds. In Section 5.2, we will generalize this to the case

where there may be more than two possible worlds.

Let T1 and T2 ble worlds of G.

be

transition matrices corresponding to two possie personalized PageRank values r1 and r2 for

T1 and T2 for seed set, S, are de ned in Section 2.2 as

r1 =  T1 r1 + (1 -  ) s , and r2 =  T2 r2 + (1 -  ) s ,

where  is a residual probability parameter and s is a re-seeding

vector such that if a node

i  S, then s [i] =

1 S

and s [i] = 0,

otherwise. It is easy to see that these two equations can be rewri en as follows to solve for r1 and r2 :

r1 = (1 -  )(I - T1)-1 s and r2 = (1 -  )(I - T2)-1 s .

Given these, as de ned in Section 3.3, we can compute the expected PPR values for the edge uncertain graph as

r

=

1 2

(r1

+

r2 )

=

1- 2

((I

- T1)-1

+ (I

- T2)-1) s .

Let us split both T1 and T2 into three parts:

T1 = TBL + TX + P1 and T2 = TBL + TX + P2,

where TBL +TX corresponds to the certain parts of the graph and P1 and P2 correspond to the uncertain edges in the two possible worlds.
Let TBL be the block-diagonal matrix, obtained by partitioning the
graph into blocks (for example using METIS [15]), and TX represent

(certain) transitions across these partitions.

Note that, in general, we have TBL  TX . As we will see shortly, in this section, we further assume5 that TX  P1 and

TX  P2 . As proposed in [28], assuming that the blocks are

su

ciently small, we can e

ciently

compute

Q

-1 BL

=

(I

-

TB L )-1

by rst computing the inverse matrices of each block and then

combining

these

inverse

matrices

to

obtain

Q

-1 BL

,

which

itself

is

in

block-diagonal form. Moreover, since TX , P1, and P2 are all sparse,

we can also e ciently decompose the TX + P1 and TX + P2 into

TX + P1  U1S1V1 and TX + P2  U2S2V2,

(1)

5 While this is a common assumption in related work [2], in Section 5.5, we discuss how to relax this assumption in cases where the number of uncertain edges involved in each possible world is large.

529

Session 5A: Retrieval Models and Ranking 3

SIGIR'17, August 7-11, 2017, Shinjuku, Tokyo, Japan

using a sparse approximate decomposition algorithm, such as [3].

Given

these,

we

can

rewrite

r

=

r

=

1 2

(r1

+

r2 )

as



1

- 2



 

I -  (TBL +U1S1V1)

-1
+

I -  (TBL +U2S2V2)

-1 s . 

en, by applying the well-known Sherman-Morrison lemma [25] on the term (I -  (TBL +Ui SiVi ))-1, we can reformulate the above equation to obtain6

r



1- 2

Q

-1 BL

+

QB-L1 U1(S1-1

-

V1Q

B-L1 U1

)-1V1Q

-1 BL

+

QB-L1 + QB-L1 U2(S2-1 - V2QB-L1 U2)-1V2QB-L1 s .

When we further apply the Sherman-Morrison lemma on the term (S1-1 - V1QB-L1 U1)-1 in the above equation, we obtain
(1 -  )QB-L1 s

+



(1 - 2



)

Q

-1 BL

U1(S1 + S1V1(QBL - U1S1V1)-1U1S1)V1

+ U2(S2 + S2V2(QBL - U2S2V2)-1U2S2)V2

Q

-1 BL

s .

is equation can be simpli ed by introducing the terms M1 = U1S1V1 and M2 = U2S2V2 (where M1  TX + P1 and M2  TX + P2):

r



(1

-

 )I

+

 2

Q B-1L

(M1 + M2) + 

M1(QBL -  M1)-1M1

(2)

+ M2(QBL -  M2)-1M2 QB-1L s .

Relying on the assumption that TBL  TX + P1 and TBL  TX + P2 , we can ignore the terms M1 and M2 in (QBL -M1)-1 and (QBL - M2)-1 in the above equation and rewrite the rest as

r



(1

-

 )I

+

 2

QB-L1

(2TX + P1 + P2) + 

2TX QB-L1TX

+

(P1

+

P2 )Q B-L1 TX

+

TX

Q

-1 BL

(P1

+

P2)

(3)

+ P1QB-L1 P1 + P2QB-L1 P2

Q 

-1 BL

s .

Furthermore, again relying on the assumption that TBL  TX 

P1

,

P2

,

the

term

P1QB-L1 P1

+

P2Q

-1 BL

P2

will

be

negligible

next

to

(rP1c+anPb2)eQaB-pL1pTroXxi+mTaXteQlyB-cL1o(mP1p+utPe2d)aasnd thus can be ignored and

(1

-

 )I

+

 2

Q

-1 BL

(2TX + (P1 + P2)) + 

2TX QB-L1TX +

(4)

(P1 + P2)QB-L1TX + TX QB-L1 (P1 + P2)

 Q


-1 BL

s .

Summary and Key Advantages: First of all, assuming that the

blocks are

once

Q

-1 BL

su is at

chieanntdl,yssomlvailnlganfodrQrB-L1ucsainngbtehee

ciently computed, above equation in-

volves very sparse matrix multiplications (involving TX and P1 +P2)

and thus can be processed very e ciently (see Section 6). A second

advantage of the above formulation is that it can be easily extended

to any number of possible worlds.

6For space considerations, we do not provide the complete sequence of algebraic operations in each step.

5.2 General Case: > 2 Possible Worlds

When

we

have n

possible worlds

(i.e.,

r

=

1 n

(r1

+

...

+

rn )),

the

UPPR equation (Equation 4) can be generalized as

(1

-

 )I

+

 n

QB-L1

(nTX

+ (P1 + ... + Pn )) + 

nTX QB-L1TX

+ (P1 + ... + Pn )QB-L1TX + TX QB-L1 (P1 + ... + Pn )

Q 

-1 BL

s .

(5)

As we see in Section 6, this formulation leads to e cient execution

plans,

especially

because

the

term

1 n

(P1

+

...

+

Pn )

in

Equation

5

can be obtained (without having to enumerate all possible worlds)

directly by computing the ratio of the number of possible worlds

in which a given edge exists.

Under mutual exclusion semantics: As we have seen in Sec-

tion 3.1, the possible worlds covered by an uncertain edge consist

of all combinations of its target nodes. Under mutual exclusion

semantics, only one of the edges implied by the uncertain edge can

be valid in the real world. Let i be a node which has c outgoing certain edges and u outgoing uncertain edges. If, in a given possible

world, some of the u outgoing uncertain edges map to , then in that

possible world, the transition probabilities for the remaining certain

and uncertain edges will be higher. We can use this observation to

compute Pa

=

1 n

(P1

+

... + Pn)

as

follows:

Let j be a target node of an uncertain edge, e-, with

tar et(e-) = k. e value of Pa (j, i) can be computed as7

1 u-1

1

k × h=0 c + u - h (ratio of worlds s.t. h of other unc.edges are  ) .

Here, p() denotes the probability of a given event. Note that, if e- has  as a target, then the corresponding transi-
tion probability has to be redistributed among the outgoing certain edges of the node and, if none exists, then it needs to be redistributed among all nodes in the graph. Let e+ be an outgoing certain edge from i and let us denote its target as j . e transition probability, for e+, taking into account  transition for the uncertain edges, can be computed as

u h=0

1 c +u -h

(ratio of worlds s.t. h of unc.edges are ).

However, since e+ is a certain edge, it belongs to either intra-
partition or cross-partition certain edges. erefore, when we
compute the Pa (j, i), we need to compensate for the portion of the transition probability already accounted in TBL or TX . Let C(j, i) denote TBL(j, i) + TX (j, i); then, the cell [j, i] in Pa has the compensated value

u h=0

1 c +u -h

(ratio of worlds s.t. h of unc.edges are ) - C(j, i).

If i does not have any certain edges, the transition probability is distributed among all nodes in the graph. See [19] for details.
In both cases, to compute, Pa , we need to compute the probability that for h out of a given number of uncertain edges,  will

7Note that, if j is a target for multiple outgoing edges from i , all transition probabilities to j need to be aggregated (see [19]).

530

Session 5A: Retrieval Models and Ranking 3

SIGIR'17, August 7-11, 2017, Shinjuku, Tokyo, Japan

be selected as the target. Let us be given m = (m0 + m1) uncertain edges, such that m0 many do not contain  in the target set and m1 many do. Let the maximum target size for this la er set of nodes
be max tar et. en, we can group the m1 uncertain edges to max tar et many groups where, each group, l , consists of uncertain edges with target size l; i.e., 1 + 2 + . . . + max tar et = m1. Note that, by de nition, any uncertain edge which contains  as a target must also have at least one other node in its target set,
1 = 0. Given this, we can compute the probability that h out of m
uncertain edges will be  as
p(h2 + h3 + . . . +hmax tar et = h s.t . 2l max tar et hl in l edges select ).
e probability p(hl in l edges select ) is binomially distributed with B( l , 1 l) ­ i.e., there are l uncertain edges, each serving as an independent trial with 1 l success rate for
the selection of  among the available targets. Consequently, the
probability that h out of m uncertain edges select  as their tar-
gets is distributed as a summation of the binomial distributions
B( 2 , 1 2) + . . . + B( max tar et , 1 max tar et). Algorithms to e ciently compute summation of binomial distributions are
presented in [4]. See [19] for details.

Under multiple edge semantics: In this case, several of the edges implied by a given uncertain edge can be simultaneously valid. Let i be a node with c outgoing certain edges and u outgoing uncertain edges. Let j be a target node of an outgoing edge, e, from i . e value of Pa (j, i) can be computed as8

total out h=0

1 c +h

×p

num selected tar et nodes(e) = h
e U

,

where total out

=

eU tar et(e) {} and

num selected tar et nodes(e) is the number of nodes se-

lected as outgoing targets for e in a given possible world (if  is the

only target selected, then num selected tar et nodes(e) = 0).

Note that, similarly with the case of mutual exclusion semantics,

for certain edges, we need to compensate for transition probabilities

already accounted inTBL orTX . Also, if i does not have any certain edges, the transition probability for the case where all uncertain

edges select  as target needs to be distributed among all nodes.

See [19] for details.

To compute Pa using the above equation, we need to compute

the probability p (eU num selected tar et nodes(e) = h). Once again, this can be achieved by representing the distribution as a sum

of binomial-like distributions: intuitively, if e is an uncertain edge

with , then the probability that t many non- targets are selected

can be represented in the form of a binomial with tar et(e) - 1

many trials and 1 2 success rate. If, on the other hand, e is an

uncertain edge without , the probability that t many targets are

selected can be represented in the form of a binomial with tar et(e)

many trials and 1 2 success rate. In the la er case, however, we

need to correct for the situation where t = 0. is is because, under multiple edge semantics, for an uncertain edge without , the

selected target nodes must include at least one node in the graph;

thus, t cannot take the value of 0. See [19] for details.

8Again, all i to j transitions need to be aggregated.

5.3 Accuracy of UPPR
e UPPR equation (Equation 5) captures the underlying uncer-
tainty in a way that leads to minimal approximation errors under
the assumption TBL  TX  P . In particular, the UPPR process has three speci c sources for potential errors, each of which is
minimized under these, generally valid, assumptions:
e rst source of error is the decomposition of TX + P into USV using an approximate algorithm, such as [3], that re-
lies on the sparsity of the edges that cross partitions and of the
uncertain edges (see Equation 1). e second source of error is
the assumption that the terms M1 and M2 are negligible relative to the rest of the terms in Equation 2; this relies on the as-
sumption that TX and P that contribute to M are both sparse matrices. e third source of error is the assumption that the term P1QB-L1 P1 + P2QB-L1 P2 in Equation 3 is negligible relative to (P1 + P2)QB-L1TX + TX QB-L1 (P1 + P2).
Note that all three potential sources of error are minimized when
TBL  TX  P . While the fact that whether TBL  TX holds or not depends on the type of graph and the partitioning
algorithm used, whether TX  P or not depends on the amount of uncertain edges in the graph. In Section 5.5, we discuss how
to relax the assumption, TX  P , in cases where there are signi cant number of uncertain edges in the graph rendering P
relatively dense, using a hybrid strategy.

5.4 E cient Computation of UPPR Scores
Let us partition Equation 5 into 6 subcomponents:

r

=

1 n

( r1

+

...

+

rn )



(1

-



)Q

-1 BL

s

+



(1

-



)Q B-1L TX

Q B-1L

s

(1)

(2)

+

 (1 - n



)

Q

-1 BL

(P1

+

...

+

Pn

)Q

-1 BL

s

(3)

+



2

(1

-



)Q

B-1LTX

Q

B-1LTX

Q

-1 BL

s

(4)

+

 2(1 - n



)

Q

-1 BL

(P1

+

...

+

Pn

)Q

B-1LTX

Q

-1 BL

s

(5)

+

 2(1 - n



)

Q

B-1LTX

Q

-1 BL

(P1

+

...

+

Pn

)Q

-1 BL

s

.

(6)

Each of the six subcomponents above contains an extremely sparse

re-seeding

vector

s .

Moreover,

Q

-1 BL

is

a

block

diagonal

matrix

and

TX and P are all sparse. Consequently, each of the terms can be

computed, right to le , through e cient vector-matrix multiplica-

tions. For example, the subcomponent (2) can be computed from

right to le with the following sequence of e cient operations:

QB-L1

s 

TX

Q

-1 BL

s



Q

-1 BL

TX

Q

-1 BL

s

V × V V ×1 V × V V ×1

V × V V ×1





(1

-



)

Q

B-L1 TX

Q

-1 BL

s

.

V ×1

531

Session 5A: Retrieval Models and Ranking 3

SIGIR'17, August 7-11, 2017, Shinjuku, Tokyo, Japan

Data

# of

# of

nodes edges

ego-Facebook Wiki-Vote
web-NotreDame web-BerkStan

4,039 7,115 325,729 685,230

88,234 103,689 1,497,134 7,600,595

Table 1: Data sets

# of partitions
3 3 50 500

di erent # of
uncertain edges
di erent degree of
edge uncertainty

# of

degree

edge

uncertain of edge semantics

edges uncertainty

# of possible worlds

2

16-64

4

4

mut.excl.

256-4,096

6

(multiple)

4,096-262,144

8(7)

65,536-2,097,152

2

16-16

4

mut.excl.

256-4,096

4

6(5)

(multiple)

1,296-65,536

8(6)

4,096-1,048,576

10

10,000

Table 2: Uncertainty scenarios

Moreover, and QB-L1TX

QsinB-cL1es thoecctuerrminsm(uPl1tip+le..s.u+bcPonm)p, oQneB-nL1tss, ,thTeXyQcaB-nL1

s , be

cached and reused ­ once these terms are cached, the rest of the

computations for the six subcomponents can be executed in par-

allel. Note further that several of the terms above can be cached

and reused for the same uncertain graph with di erent seed vec-

tors or even graphs with the same certain, but di erent uncertain

components (to carry out hypothetical, if-then analyses).

5.5 Hybrid Computation in the Presence of
Large Numbers of Uncertain Edges
As we have discussed in the previous section, the accuracy of the proposed UPPR technique relies on the assumption that TBL  TX  P . In particular, whether TX  P or not depends on the amount of uncertain edges in the graph: UPPR is likely to be highly e ective and e cient if the number of uncertain edges in the graph is relatively small. In contrast, as we have seen in Section 4.2, the collapsing (and similarly a ening) based techniques may lead to large errors if the uncertain edges are concentrated around nodes with large PPR scores. We can leverage these two observations to deal with graphs with large numbers of uncertain edges: e idea is to eliminate uncertain edges in the graph, relying on the highly e cient a ening technique, away from the seed nodes of the graph (which are likely to have large PPR scores) and only maintain uncertain edges in the neighborhoods of the seed nodes. Consequently, errors due to a ening are minimized as this technique is utilized only in regions with less likelihood of producing high PPR scores; UPPR errors are also minimized, especially in large graphs, as the numbers ( P ) of uncertain edges in possible worlds that UPPR has to deal with have been reduced relative to the rest of the graph.

6 EXPERIMENTS
6.1 Datasets and Setup
We ran experiments on a 16-core CPU Nehalem Node with 64 GB RAM. All codes were implemented in Matlab and run using Matlab R2013b. Table 1 provides an overview of the four data sets [21],

with di erent numbers of nodes and edges, and graph partitions, considered in the experiments (the partitions are obtained using METIS [15]). Table 2 details the volumes of uncertainty we have experimented with for the results reported in this section. Here, the "degree of uncertainty" refers to the number of target nodes on each uncertain edge it represents and the "edge semantics" describes "mutual exclusion" and "multiple edge" semantics. ese together de ne the number of possible worlds corresponding to a given uncertain edge. To obtain uncertain graphs with the speci cations in the table, we select random edges in the original graph and render them uncertain by augmenting destinations with random nodes. We further assume that the uncertain edges are located on the seeds (as discussed in Sections 4.2 and 5.5, uncertain edges away from the seeds can be a ened into certain edges).
6.2 Alternative Approaches
In this section, in addition to UPPR (presented in Section 5), we considered all alternative approaches discussed in Section 4. As a further baseline, we also consider a Monte Carlo-based solution (which starts from the seed nodes, and samples random walks of a given length) and BEAR [27], a recent PPR computation algorithm, which originally does not take uncertainty into account. For uncertainty, we use the a ened transition matrix for the transition matrix and compute PPR values. In the experiments, without loss of generality, we set the residual probability parameter,  to 0.85. To compare di erent algorithms, we consider both e ciency (i.e., PPR computation time) and accuracy (in terms of the correlations of PPR rankings for the nodes that are ranked top-50 by the exhaustive technique, exhPPR).
7 RESULTS AND DISCUSSIONS
We start the discussion of the results by considering e ciency and accuracy of the various algorithms on the Facebook data set, for di erent degrees of uncertainty in the graph.
Impact of the Degree of Uncertainty. Figures 5(a) and (b) show the execution times of di erent algorithms, as the overall number of uncertain edges and degree of uncertainty in the graph are increased. As we see in the gure 5, exhaustive and collapsing-based approaches (which need to enumerate the possible worlds) quickly become infeasible as the number of possible worlds increases. While
a ening-based approaches are reasonably fast and scale be er than the exhaustive and collapsing-based approaches, they are 1 or 2 order slower than UPPR. BEAR takes less time than UPPR for PPR computation but the di erence between them is negligible. Figures 5(c) and (d) con rm that execution time savings on UPPR do not come with any drop in accuracy ­ UPPR provides similar (or in some cases be er) accuracy to the two collapsing- and a eningbased approaches, collPPR and atPPR, that rely on direct computation of PPR from the transition matrix, even though it uses an approximate solution for PPR. As expected, the accuracy of BEAR is very poor compared to UPPR and the accuracy is not stable and a ected by the amount of uncertainty. Other techniques such as collApxPPR, collApx2PPR, and atApxPPR that similarly solve PPR approximately, relying on a sparse approximation method, all have signi cantly degraded accuracies. is indicates that, by carefully accounting for the sources of errors, UPPR is able to achieve high

532

Session 5A: Retrieval Models and Ranking 3

SIGIR'17, August 7-11, 2017, Shinjuku, Tokyo, Japan

Time (sec.)

100000 10000 1000 100 10 1 0.1 0.01 0.001 0.0001

Exec. Time for different # of edges

#ue2 udeg4

#ue4 udeg4

#ue6 udeg4

Mutual exclusion

#ue8 udeg4

#ue4 udeg4

#ue6 udeg4

#ue7 udeg4

Multiple edge

(a) e ciency, varying number of uncertain edges

Time (sec.)

100000 10000 1000 100 10 1 0.1 0.01 0.001

Exec. Time for different degree of uncertainty

#ue4 udeg4

#ue4 udeg6

#ue4 udeg8

Mutual exclusion

#ue4 udeg10

#ue4 udeg4

#ue4 udeg5

#ue4 udeg6

Multiple edge

(b) e ciency, varying degree of uncertainty

Rank Correlation Time  (sec.)  

Correl. for different # of edges

Correl. for different degree of uncertainty

1

1

Rank Correlation

0.8

0.8

0.6

10000  

Exec.  Time  for  Uncertain0  t.6argets  

0.4

100  

0.2

1  

0

0.01  

-0.2

#ue2 udeg4

#ue4 udeg4

0.0001  

#ue6

#ue8

udeg4 udeg4

#ue4 udeg4

#ue6 udeg4

#ue7 udeg4

Mutual exclusion

Multiple edge

0.4 0.2
0 -0.2 -0.4

#ue4 udeg4

#ue4 udeg6

#ue4 udeg8

Mutual exclusion

#ue4 udeg10

#ue4 udeg4

#ue4 udeg5

#ue4 udeg6

Multiple edge

(c) accuracy, varying number of uncertain edges

(d) accuracy, varying degree of uncertainty

exhPPR   exhApxPPR   collPPR   collApxPPR   collApx2PPR   flatPPR   flatApxPPR   BEAR   UPPR  

Figure 5: Results on the Facebook data set, for di erent amount of uncertainty with di erent edge semantics: UPPR provides almost perfect accuracy and its execution time is not a ected by the amount of uncertainty

accuracies (1.0) e ciently (0.01 seconds) and avoids accuracy pitfalls that other schemes are not able to handle e ectively.

UPPR vs. Monte Carlo Method. Additionally, we consider a

Monte Carlo (MC) based alternative to UPPR. [22] notes that (in

regular graphs) for estimating PPR values close to a desired thresh-

old  (where  is the expected PPR score; i.e., 1 V , where V is

the number of nodes), a Monte Carlo based algorithm would need

O(1 ( × 2)) = O( V

2), samples of length,

eomet

r

ic

(

1 1-

),

where  is the relative error and 1 -  is the teleportation rate. is

means that, when we seek high accuracy, Monte Carlo based solu-

tions may be prohibitive [22]. Indeed, for the Facebook data set, with

 4000 nodes, to have 95% accuracy, we would need 4000 0.052 =

1,

600,

000

random

walk

samples

(of

length





1 0.15



=

7,

since

we

set  to 0.85).

In Table 3, we report the accuracy comparison for a more modest

target error rate of 0.15, which leads to  150K, random walks

­ note that, even in this modest case, taking 150K random walk

samples is more expensive (65 seconds in Matlab) to compute than

UPPR (0.01 seconds). In the table, we see that for top-100 to top500 results, Monte Carlo, is able to match the target accuracy in the

presence if mutual exclusion semantics; but fails to do so when all

nodes are considered. In the presence of multiple edge semantics,

MC is able to match the target error rate only when top-500 results

are considered and the results are very poor for top-100 nodes,

even with larger number of samples, with longer lengths. Note that

UPPR is able to achieve signi cantly higher accuracy (for top-100,

top-500, as well as for all nodes), very cheaply ( 0.01 seconds for this data set as shown in Figure 5).

Di erent Data Sets and the Impact of the Graph Size. In the experiments reported in Figure 6, we compare the e ciency and

e ectiveness of the various algorithms we presented in the paper for graphs of di erent sizes. e gure reports results for two sample uncertainty complexities: Figures 6(a) and (c) report execution time and rank correlation for a scenario with mutual exclusion semantics, whereas Figures 6(b) and (d) consider a scenario with multiple edge semantics. As we see in this gure, the proposed UPPR method is scalable, not only in terms of the possible worlds of the graph, but also the graph size. While the closest algorithms to UPPR in terms of e ciency and scalability, atApxPPR and BEAR, su er signi cantly from accuracy degradations, UPPR provides very high (mostly close to perfect) accuracy in all cases considered in this section.
Here, we do not present the accuracy results for the largest BerkStan data set as the cost of performing the exhaustive enumeration needed to obtain the accuracy ground-truth is prohibitive on this data set. However, the results show that UPPR provides very good accuracy, while its execution time is minimally e ected by graph size. In fact, on the largest data set, UPPR is even faster than the BEAR baseline, while providing signi cantly be er accuracy.
8 CONCLUSIONS
In this paper, we presented an uncertain edge model with mutual exclusion and shown that, while there are several ways to naively extend existing personalized PageRank computation techniques to graphs with uncertain edges, these either lead to large degrees of errors or are very expensive to compute in practice. We therefore proposed a novel Uncertain Personalized PageRank (UPPR) algorithm to approximately compute personalized PageRank values on such graphs. Experiments con rmed that the proposed technique has very high accuracy and is multiple-orders faster than available algorithms that can provide comparable accuracy.

533

Session 5A: Retrieval Models and Ranking 3

SIGIR'17, August 7-11, 2017, Shinjuku, Tokyo, Japan

Time (sec.)

1000000 100000 10000 1000 100 10 1 0.1 0.01 0.001
1 0.8 0.6 0.4 0.2
0 -0.2

Exec. Time for Different Graphs; #ue=4, udeg=10, mut.excl. semantics

Facebook

Wiki-Vote

Notredame

Berk-Stan

(a) e ciency, mutual exclusion semantics

Time (sec.)

1000000 100000 10000 1000 100 10 1 0.1 0.01 0.001

Exec. Time for Different Graphs; #ue=7, udeg=4, multiple semantics

Facebook

Wiki-Vote

Notredame

(b) e ciency, multiple semantics

Berk-Stan

Correl. for for Different Graphs; #ue=4, udeg=10, 1m00u0t0.e   xcl. semantics

Exec.  Time  for  Uncertain  targets  
1

Time  (sec.)  

100  

0.9

Rank Correlation

0.8

1  

0.7

0.01  

0.6

0.5

0.0001  

0.4

0.3

0.2

0.1

0

Facebook

Wiki-Vote

Notredame

(c) accuracy, mutual exclusion semantics

Correl. for for Different Graphs; #ue=7, udeg=4, multiple semantics

Facebook

Wiki-Vote

Notredame

(d) accuracy, multiple semantics

exhPPR   exhApxPPR   collPPR   collApxPPR   collApx2PPR   flatPPR   flatApxPPR   BEAR   UPPR  

Rank Correlation

Figure 6: Results in graphs of di erent sizes: as the gures show, UPPR provides good accuracy and its execution time is minimally e ected by the graph size

Edge type

# of Length of Top Top All

random random 100 500 nodes

walks

walks

acc. acc. acc.

Mutual exclusion semantics (#ue=4, #udeg=10)

UPPR

8

150K

10

Monte

20

Carlo

30

8

300K

10

Monte

20

Carlo

30

0.952 0.782 0.816 0.841 0.834 0.814 0.845 0.858 0.813

0.981 0.881 0.919 0.920 0.908 0.911 0.927 0.924 0.913

0.997 0.525 0.583 0.519 0.533 0.584 0.545 0.588 0.571

Multiple edge semantics (#ue=7, #udeg=4)

UPPR

8

150K

10

Monte

20

Carlo

30

8

300K

10

Monte

20

Carlo

30

0.998 0.193 0.145 0.258 0.269 0.193 0.163 0.148 0.155

0.989 0.878 0.900 0.969 0.937 0.945 0.912 0.905 0.901

0.997 0.571 0.656 0.658 0.696 0.649 0.667 0.660 0.670

Table 3: UPPR vs. MC method on the Facebook graph

REFERENCES
[1] S. Adali, M.L. Sapino, and B. Marshall, A rank algebra to support multimedia mining applications, MDM'07, 2007
[2] P. Boldi, F. Bonchi, A. Gionis, and T. Tassa. Injecting Uncertainty in Graphs for Identity Obfuscation, PVLDB'12, 2012.
[3] M. Brand. Fast online svd revisions for lightweight recommender systems. SDM, pp 37­46. SIAM, 2003.
[4] K. Butler and M. Stephens. e distribution of a sum of binomial random variables, Stanford University CA Dept of Statistics, 1993.
[5] S. Brin and L. Page. e anatomy of a large-scale hypertextual web search engine. WWW, 1998.
[6] K.S. Candan and W.S. Li, Using random walks for mining web document associations. PAKDD'00, pp.37­46, 2000.
[7] K.S. Candan, J. Grant, and V.S.Subrahmanian, A Uni ed Treatment of Null Values Using Constraints, Information Sciences, 98 (1-4) (1997), pp. 99­156
[8] H. Cao, K.S. Candan, and M.L. Sapino. Skynets: Searching for Minimum Trees in Graphs with Incomparable Edge Weights. CIKM'11, 2011.
[9] S. Chakrabarti. Dynamic personalized pagerank in entity-relation graphs. WWW'07, 571­580, 2007.

[10] J.B. Collins and S.T. Smith. Network Discovery For Uncertain Graphs. Fusion'14, 2014.
[11] C. De Kerchove, L. Ninove, and P. Van Dooren. Maximizing pagerank via outlinks. Linear Algebra and its Applications, 429(5):1254­1276, 2008.
[12] L. Du, C. Li, H. Chen, L. Tan, and Y. Zhang. Probabilistic simrank computation over uncertain graphs. Information Sciences. 295:521­535, 2015.
[13] H. Ishii and R. Tempo. Computing the pagerank variation for fragile web data. SICE Journal of Control, Measurement, and System Integration, 2(1):1­9, 2009.
[14] G. Jeh and J. Widom. SimRank: A Measure of Structural-Context Similarity. SIGKDD'02, pages 538­543, 2002.
[15] G. Karypis and V. Kumar. A fast and high quality multilevel scheme for partitioning irregular graphs. SIAM Journal on Scienti c Computing, 1998.
[16] A. Khan, F. Bonchi, A. Gionis, and F. Gullo. Fast Reliability Search in Uncertain Graphs. EDBT'14, 2014.
[17] A. Khan and L. Chen. On Uncertain Graphs Modeling and eries. VLDB'15, pp. 2042­2043, 2015.
[18] J.H. Kim, K.S. Candan, M.Luisa. Sapino. Locality-sensitive and Re-use Promoting Personalized PageRank computations. Knowl. Inf. Syst. 47(2): 261-299 (2016)
[19] J.H. Kim. E cient Node Proximity and Node Signi cance Computations in Graphs. PhD esis. Arizona State University, 2017.
[20] R.-H. Li, J.X. Yu, R. Mao, and T. Jin. E cient and Accurate ery Evaluation on Uncertain Graphs via Recursive Strati ed Sampling. ICDE'14, 2014.
[21] J. Leskovec and A. Krevl. SNAP Datasets: Stanford Large Network Dataset Collection. h p://snap.stanford.edu/data. 2014.
[22] P. Lofgren. E cient Algorithms for Personalized PageRank. PhD esis, Stanford University. 2015.
[23] X. Niu, L. Li, and K. Xu. Digrank: Using global degree to facilitate ranking in an incomplete graph. CIKM'11, pp 2297­2300. 2011.
[24] D.L. Nowell and J. Kleinberg. e Link Prediction Problem for Social Networks. CIKM'03, 2003.
[25] W. W. Piegorsch and G. Casella. Erratum: inverting a sum of matrices. SIAM review, 32(3):470, 1990.
[26] M. Potamias, F. Bonchi, A. Gionis, and G. Kollios. K-nearest neighbors in uncertain graphs. VLDB'10, 3(1-2):997­1008, 2010.
[27] K. Shin, J. Jung, L. Sael, and U Kang. BEAR: Block Elimination Approach for Random Walk with Restart on Large Graphs. SIGMOD'15, 2015.
[28] H. Tong, C. Faloutsos, and J.-Y. Pan. Fast random walk with restart and its applications. ICDM, pp. 613­622, 2006.
[29] Y. Yuan, L. Chen, G. Wang. E ciently Answering Probability reshold-Based Shortest Path eries over Uncertain Graphs, DASFAA'10, 2010.
[30] Y. Yuan, G. Wang, H. Wang, and L. Chen. E cient Subgraph Search over Large Uncertain Graphs. PVLDB, 4(11), 2011.

534

