Short Research Paper

SIGIR'17, August 7-11, 2017, Shinjuku, Tokyo, Japan

Recommending Complementary Products in E-Commerce Push Notifications with a Mixture Model Approach

Huasha Zhao, Luo Si, Xiaogang Li, Qiong Zhang
Alibaba Group 400 S El Camino Real, #400 San Mateo, California, USA 94402 {huasha.zhao,luo.si,xiaogang,qz.zhang}@alibaba-inc.com

ABSTRACT
Push noti cation is a key component for E-commerce mobile applications, which has been extensively used for user growth and engagement. e e ectiveness of the push noti cation is generally measured by message open rate. A push message can contain a recommended product, a shopping news and etc., but o en only one or two items can be shown in the push message due to the limit of display space. is paper proposes a mixture model approach for predicting push message open rate for a post-purchase complementary product recommendation task. e mixture model is trained to learn latent prediction contexts, which are determined by user and item pro les, and then make open rate predictions accordingly. e item with the highest predicted open rate is then chosen to be included in the push noti cation message for each user. e parameters of the mixture model are optimized using an EM algorithm. A set of experiments are conducted to evaluate the proposed method live with a popular E-Commerce mobile app.
e results show that the proposed method is superior than several existing solutions by a signi cant margin.
1 INTRODUCTION
Push noti cation service [1, 8, 11, 13] is a key component of Ecommerce mobile applications. It pushes text messages to users to provide a seamless shopping experience. e push messages are usually classi ed into two categories: transaction related push message which reminds the user of transaction information on existing orders, such as payment processing, logistic updates and etc., and marketing push message which promotes new product or shopping news that the user may be interested in. Some examples of push messages are illustrated in Figure 1. Push message has been extensively used for user growth and user engagement. It initializes the connection with user in an active manner, and can bring users back to the E-commerce mobile app. e e ectiveness of the push message is measured by open rate which is the percentage of messages clicked/viewed by users.
In marketing push noti cation, recommending the "right" product is critical. ere has been substantial research in recommendation systems [3, 6, 12]. However, push noti cation has several
Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for pro t or commercial advantage and that copies bear this notice and the full citation on the rst page. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permi ed. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior speci c permission and/or a fee. Request permissions from permissions@acm.org. SIGIR'17, August 7­11, 2017, Shinjuku, Tokyo, Japan. © 2017 ACM. 978-1-4503-5022-8/17/08. . . $15.00 DOI: h p://dx.doi.org/10.1145/3077136.3080676

Figure 1: ree examples of push messages 1: e top two are marketing push messages. e top message is a PPR which recommends a personalized sofa mat without making speci c connections with user behavior. e middle message is a CPR which recommends Tie Guan Yin tea a er the user purchased a teapot. e bottom one is transaction related push message. e message reminds the user that the purchased teapot has been shipped from seller.
key di erences in comparison with classic recommendation tasks. First, the text template or the presentation of the push message can be more important in determining the open rate than the recommended product itself. A ractive message slogans sometimes play a decisive role. To increase open rate, the message needs to be created with strong and preferably direct a achment with the user behavior. Furthermore, only one or two items can be shown in the push message due to the limit of display space. Finally, only a given number of messages can be sent to a user during a period of time, to avoid spamming. As a result, the prediction accuracy of open rate becomes critically important due to limited chance of recommendation.
In this paper, we propose a method for recommending postpurchase complementary products through push noti cation. Postpurchase recommendation has signi cant advantage in the push se ing in comparison with pushing a single personalized product without connecting it to user history. Examples of complementary product recommendation (CPR) and personalized product recommendation (PPR) are illustrated in Figure 1. PPR pushes only one product to the user using some collaborative ltering algorithms, and the message contains only one anchor to the user. In contrast,
1Translations of the messages in the gure, from top to bo om. 1, Go shopping during the weekend? All-season all-purpose non-slip cloth sofa mat for you. 2, Shopping together: 2016 Anxi fragrant Tie Guan Yin tea with your newly bought teapot. 3, Logistic reminder: your purchased item Xianmingju health teapot has been shipped.

909

Short Research Paper

SIGIR'17, August 7-11, 2017, Shinjuku, Tokyo, Japan

CPR naturally embeds two anchors in the push message template the purchased product and the recommended product, and it o ers stronger connections with the user than PPR. As a result, such messages are more a ractive to users.
In addition, a mixture model is presented to predict message open rate. e predicted open rate is in turn used to determine the product to recommend. Mixture model is also known as probabilistic latent class model, and it has been used in user modeling and recommendation systems [4, 5, 7, 14]. A mixture model can automatically learn the underlying structure of a prediction task, and improve the prediction accuracy by training separate sets of forecasting weights for di erent latent prediction classes.
In our problem, the mixture model is used to represent hidden prediction contexts. A context is determined by a combination of user and product pro les. For example, some users may be more interested in the popularity of the product, while others care more about the complementarity between the recommended product and purchased product. In this case, in the prediction model we need to assign higher weights on product popularity feature to the rst group of users while give more weights on complementary score to the second group. A mixture model can be trained to learn such latent contexts for prediction.
e rest of the paper is arranged as follows: Section 2 describes complementary score calculation for CPR, and the score is one of the key features used in the model. e mixture model for open rate prediction is discussed in Section 3. Section 4 presents experiment results along with analysis. And nally Section 5 concludes the paper.
2 COMPLEMENTARY PRODUCT
RECOMMENDATION
Complements and substitutes are two types of recommendation products [9, 10]. Complements can be bought in addition to each other. However, substitutes can be bought instead of each other. In the post-purchase recommendation scenario, it is critical to recommend complementary products, but not substitutes. is reason is that users have already made the decision, and may feel being spammed if a product that serves the same purpose is recommended again. Here we present the method we use for complementary product candidate selection. We choose the product pairs with high co-purchase scores and low substitutivity scores at the same time.
e scoring method is described in the following.
2.1 Co-Purchasing Graph
Assume Aui is the user-product purchase graph for user u  U and product i  P over a certain period of time, and t (Aui ) is the timestamp at which the purchase event happens. e co-purchase score pij - the score for buying j a er buying i is de ned as follows,

pi j = u U Aui Au j 1(t (Au j ) > t (Aui )) .

(1)

u U A2ui u U A2u j

2.2 View-and-then-Purchase Graph
Further assume Bui is the user-product view graph, and t (Bui ) is the timestamp at which the view event happens. e substitutivity

score qij between product i and j is de ned as follows,

qi j = u U Bui Au j 1(t (Au j ) > t (Bui )) .

(2)

u U Bu2 i u U A2u j

e nal complementary score for product pair i, j is determined by,

sij = pij - qij .

(3)

e score selects product pairs with high complementarity and low substitutivity. We also calculate complementary scores for categories with the same method.

3 MIXTURE MODEL FOR OPEN RATE
PREDICTION
In this section, the mixture model for predicting the message open rate for user-product pairs is presented. e motivation comes from the nature of users and products. For instance, some users prefer popular products (product popularity score) regardless of the complementariness between the two products (complementary score). At the same time, di erent classes of products may also cause di erent sets of prediction parameters.
At high level, the model is comprised of two parts: an assignment model which maps the inputs to prediction contexts and a contextaware prediction model for open rate forecasting. Formally, we assume the following probabilistic model:

N
P (y|X , X^ , , ) = P ( i |xi , x^i , , )

i =1

NM

=

P (zi |x^i , )P ( i |xi , zi , ). (4)

i=1 zi =1

Here N is the total number of examples in the dataset. ere are two sets of features x^i  Rm, xi  Rn for each example i  {1, . . . , N }. x^i is the context assignment feature and xi is the open rate prediction feature. In practice, features in these two sets may have
overlaps. We describe these features in more details in Section
3.1. Furthermore, each example is labeled i  {0, 1} to represent whether it is opened or not, and a hidden variable zi which assigns each example to a predicting context. We further assume M con-
texts of interest and zi  {1, . . . , M }. e model is characterized by two sets of parameters, i.e.  = (1, . . . , M ) and  = (1, . . . ,M ). Both k and k , k  {1, . . . , M } are of the same dimension as x^i and xi respectively, for i  {1, . . . , N }, and they parameterize the assignment model and prediction model of the kth context respec-
tively.
In more details, the assignment process can be modeled with a
multi-class logistic model as the following,

P (z = k |x^ = x^) = 1+

exp(kt x^)

M -1 j =1

exp(

t j

x^

)

,

k = 1, . . . , M - 1,

P (z = M |x^ = x^) = 1+

1
M -1 j =1

exp(

t j

x^

)

.

(5)

In this case,  is only de ned up to a multiplicative constant, so that M can be omi ed in the model. A binary logistic regression model

910

Short Research Paper

SIGIR'17, August 7-11, 2017, Shinjuku, Tokyo, Japan

is used for prediction, for each scenario k  {1, . . . , M } respectively,

P(

=

0|x

=

x,z

=

k)

=

1

exp(kt x ) + exp(kt x

)

,

P(

=

1|x

=

x,z

=

k)

=

1

+

1 exp

(kt

x

)

.

(6)

e log-likelihood expression for model from the data (X , y) is

di cult to optimize because it involves the log of the sum. If the

hidden variable z is introduced, however, the likelihood function

can be signi cantly simpli ed:

log(L(, |X , X^ , y, z)) = log(P (X , X^ , y, z|, ))

(7)

N
= log(P (xi )P (x^i )P (zi |x^i , )P ( i |xi , zi , )).
i =1

user features
product features user-product features
product-product features

user cluster id user active score user demographics, e.g. age, income and etc. product sales in the past 1, 2, 7, 28 days product views in the past 1, 2, 7, 28 days price and other metadata user-product preference scores in the past 1, 2, 7, 28 days respectively user-category preference scores in the past 1, 2, 7, 28 days respectively product complementarity scores de-
ned in equation 3 category complementarity scores

Table 1: Model features.

e above likelihood is intractable for solving optimized parameters analytically. We resort to the EM algorithm to nd optimal  and . In the E step, we rst derive an expression of the posterior distribution of the unobserved data. Using Bayes's rule and property of conditional independence, we can compute,

P (zi |x^i , xi , i , , ) =

P (zi |x^i , )P ( i

M k =1

P

(k

| x^ i

,

)P

|xi (i

, zi |xi

, ,

) k, )

.

(8)

An auxiliary Q function [2] of the likelihood can be derived as,

Q ( ,  |, ) =E[log(L( ,  |X , X^ , y, z))|X , X^ , y, , ]

period. User active score measures how active the user is on the E-Commerce platform. Furthermore, we use product features and user-product features generated from multiply time intervals, to capture the time dynamic of user and product behaviors. Finally, we also include product-product features: the calculations of which are presented in Section 2.
User features and product features are included in x^i , to predict prediction context. While all features except user features are used in the second stage (open rate prediction) of the mixture model (in xi ) - user features are not needed when ranking products for a speci c user.

MN

=

log(P (k |x^i ,  ))P (k |x^i , xi , i , , )

k =1 i=1

MN

+

log(P ( i |xi , k,  ))P (k |x^i , xi , i , , ).

(9)

k =1 i=1

Note, P (xi ) and P (x^i ) are removed in the Q function since we assume they both follow uniform distribution. To maximize the the Q function, we can maximize the term containing  and the term containing  independently since they are not related. We can also solve k for each scenario independently for the same argument.
e M step updates can be derived as the following,

MN

  arg max

log(P (k |x^i ,  ))P (k |x^i , xi , i , , ),

k =1 i=1

(10)

N
k  arg maxk i=1 log(P ( i |xi , k,k ))P (k |x^i , xi , i , ,k ). (11)

e above updates can be solved using a gradient decent solver.

3.1 Model Features
As shown in Table 1, there are 4 types of features we use in the mixture model. ey are user features, product features, userproduct features and product-product features.
Besides user demographics, we also use user cluster features and user active scores. User clusters are generated by running k-means on user shopping behaviors (at category level) within certain time

4 EXPERIMENTS
is section presents the experiments for evaluating the mixture model. e model is tested live on a real-world push noti cation task on a popular E-commerce mobile application with hundreds of millions of active users.
4.1 Experiment Setup
In model training, one month push noti cation log data is used. e complementary product push task reaches 10 million users daily.
ere are in total 300 million records for training. L-BFGS solver is applied to compute equations (10) (11) required by the M-step. e threshold of likelihood convergence is set to 1e-5.
4.2 Number of Contexts Evaluation
e optimal number of hidden contexts k is evaluated in this section. Figure 2 plots the log likelihood at convergence for di erent k. As we can see, there is no bene t of increasing k beyond k = 4. In addition, we also evaluate the model performance for di erent sets of features (x^i ) used for context prediction. We compare full features (described in Section 3.1) with user features only and product features only. e full model learns the user and product mixture jointly. As a result, it outperforms both user only and product only models. From Figure 2, we also observe that the model of product features only is much worse. is means there are more opportunities to explore user mixtures than product mixtures. In other words, it will be more bene cial to model open rate at user dimension rather than at product dimension, if we have to choose one.

911

Short Research Paper

SIGIR'17, August 7-11, 2017, Shinjuku, Tokyo, Japan

Figure 2: Log-likelihood per example with di erent feature sets and di erent number of contexts k.
Figure 3: Prediction model weights for di erent user clusters based on user active scores.
4.3 Impact of User Cluster on Model Weights
Experiments are run to illustrate the impact on prediction model weights of di erent sub-populations in the mixture model. Figure 3 plots the average of product-product feature weights and userproduct feature weights in the prediction model against the weight of user active score in the context assignment model. Assignment model with higher user active score weight selects more active users. As shown in the gure, more active users prefer products with higher user preference scores, while less active users prefer more on complementariness between products. Intuitively this can be explained as: sophisticated users know what they want to buy and have strong product preferences, while newbie users rely more on the complementary product recommendation from the platform.
4.4 Online Experiment Results
e CPR with mixture model is deployed live to our production push recommendation system, and A/B tests are conducted. Results are shown in Table 2. e baseline just pushes the most popular products to users without any personalization. In PPR, a state-ofthe-art item-based recommender is applied to compute personalized product. e baseline CPR model selects the product for a user with highest user-product score times product complementarity score without considering other features. It is also worth noting that a mixture model (MM) with k = 1 is equivalent to a logistic regression model for open rate prediction.
CPR outperforms PPR by a signi cant margin. is con rms our hypothesis discussed in the introduction. e CPR textual

(1) PPR (2) CPR (3) CPR with MM k=1 (4) CPR with MM k= 4

Open rate rel. to baseline 2.01 2.89 3.12 3.22

P-value
.00011 (vs. baseline) .00036 (vs. 1) .00073 (vs. 2) .0046 (vs. 3)

Table 2: Open rates of di erent methods and statistical sig-

ni cance tests.

presentations are richer and contain two anchors to the users. And therefore, CPR delivers be er results. e mixture model o ers additional gains in message open rate. e open rate improvement is around 11%. e gure also shows it is bene cial to model latent user product clusters for open rate prediction. In comparison with a plain logistic regression (mixture model with k = 1), the gain is about 3%. Although 3% does not look like a very big number, the impact of the mixture model is signi cant given the huge user base.
5 CONCLUSION AND FUTURE WORKS
is paper presents a mixture model for post-purchase complementary product recommendation. e model learns di erent open rate prediction weights for di erent user-product contexts. Experiment results show that CPR is superior than PPR by a signi cant margin, and the proposed mixture model gives additional gain in open rates.
ere are several possibilities to extend the research. Temporal features of user behavior are not included in the model. Furthermore, it will also be bene cial to consider product complementary score at di erent time scales, so that complementary product can be pushed to users at the most appropriate time.
REFERENCES
[1] Kris M Bell, Darryl N Bleau, and Je rey T Davey. 2011. Push noti cation service. (Nov. 22 2011). US Patent 8,064,896.
[2] Je A Bilmes and others. 1998. A gentle tutorial of the EM algorithm and its application to parameter estimation for Gaussian mixture and hidden Markov models. International Computer Science Institute 4, 510 (1998), 126.
[3] Jesu´s Bobadilla, Fernando Ortega, Antonio Hernando, and Abraham Gutie´rrez. 2013. Recommender systems survey. Knowledge-based systems 46 (2013), 109­ 132.
[4] Suleyman Cetintas, Datong Chen, and Luo Si. 2013. Forecasting user visits for online display advertising. Information retrieval 16, 3 (2013), 369­390.
[5] Suleyman Cetintas, Luo Si, Yan Ping Xin, and Ron Tzur. 2013. Probabilistic latent class models for predicting student performance. CIKM, 2013 (2013), 1513­1516.
[6] Jonathan L Herlocker, Joseph A Konstan, Al Borchers, and John Riedl. 1999. An algorithmic framework for performing collaborative ltering. In SIGIR, 1999. ACM, 230­237.
[7] Rong Jin, Luo Si, and Chengxiang Zhai. 2006. A study of mixture models for collaborative ltering. Information Retrieval 9, 3 (2006), 357­382.
[8] Arvind Kumar and Suchi Johari. 2015. Push noti cation as a business enhancement technique for e-commerce. In ICIIP, 2015. IEEE, 450­454.
[9] Wei Lu, Wei Chen, and Laks VS Lakshmanan. 2015. From competition to complementarity: comparative in uence di usion and maximization. Proceedings of the VLDB Endowment 9, 2 (2015), 60­71.
[10] Julian McAuley, Rahul Pandey, and Jure Leskovec. 2015. Inferring networks of substitutable and complementary products. In SIGKDD, 2015. ACM, 785­794.
[11] Veronica S Moertini and Criswanto D Nugroho. 2012. E-commerce mobile marketing model resolving users acceptance criteria. International Journal of Managing Information Technology 4, 4 (2012), 23.
[12] Xiaoyuan Su and Taghi M Khoshgo aar. 2009. A survey of collaborative ltering techniques. Advances in arti cial intelligence 2009 (2009), 4.
[13] Luchen Tan, Adam Roegiest, Jimmy Lin, and Charles LA Clarke. 2016. An exploration of evaluation metrics for mobile push noti cations. In SIGIR, 2016. ACM, 741­744.
[14] Tao Tao and ChengXiang Zhai. 2004. A two-stage mixture model for pseudo feedback. In SIGIR, 2004. ACM, 486­487.

912

