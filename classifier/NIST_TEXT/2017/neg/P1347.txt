SIRIP 1: Start-Ups and Beyond

SIGIR'17, August 7-11, 2017, Shinjuku, Tokyo, Japan

Search Without a ery - Powering Job Recommendations via Search Index at LinkedIn

Dhruv Arya
LinkedIn Corporation darya@linkedin.com

Ganesh Venkataraman
LinkedIn Corporation ghvenkat@linkedin.com

ABSTRACT
The mission of LinkedIn is to connect the world's professionals to make them more productive and successful. LinkedIn operates the world's largest professional network on the Internet with more than 500 Million members in over 200 countries. Core to realizing the mission is to help people nd jobs. In this paper, we describe how the jobs recommendations is powered by a search index and some practical challenges involved in scaling such a system.
1 INTRODUCTION
With a rich corpus of professional pro les, network connections and member actions, LinkedIn is in a unique position to anticipate the best job matches for a given member pro le. Our jobs index is extremely dynamic with new jobs listed and older ones closed frequently. The dynamism within the jobs index necessitates the need to power recommendations via a real time system (like an inverted index) as opposed to an o ine system. Typical scoring function of a recommender system involves nding a suitable match between member pro le with a job description. The real time requirements makes it impossible to score all our job listings for a given member. This implies that we need to construct a query based on member pro le, preferences and context which retrieves a much smaller subset of documents to rank. Such query construction presents interesting engineering trade o s. A broad query would imply too many documents to rank thereby breaking our latency constraints while a narrow query would imply loss of recall. For maintaining high quality match within our tight latency constraints, several di erent aspects of our system needs to come together.
2 INDEXING
Our indexing system is based o custom backend - Galene [1]. Each job listing goes through a standardization pipeline which extracts structured and semi structured information and stores it in our index. The posting list is ordered in a document dependent static order. This static rank is heavily used in query construction and plays a big role in reducing latency.
3 DECISION TREE BASED QUERY
CONSTRUCTION
We convert the query construction problem into a decision tree problem with branches in the tree corresponding to query clauses and show that such a formulation scales for very large number of
Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for pro t or commercial advantage and that copies bear this notice and the full citation on the rst page. Copyrights for third-party components of this work must be honored. For all other uses, contact the owner/author(s). SIGIR '17, August 07­11, 2017, Shinjuku, Tokyo, Japan © 2017 Copyright held by the owner/author(s). 978-1-4503-5022-8/17/08. DOI: 10.1145/3077136.3096470

Figure 1: Jobs recommendations in jobs homepage
features. Such a formulation helped reduce the p99 latency (worst 1% of queries) by 56%.
4 OFFLINE TRAINING FRAMEWORK
We implemented an o ine replay mechanism which does a true evaluation of the underlying ranking metric while evaluating gain in latency. It also increases the experimentation velocity by near accurate reproduction of production behavior and reduces number of A/B tests needed with live tra c. The framework is generic across search and recommendations so long as the underlying retrieval is based on an inverted index.
5 LEARNING TO RANK
The ranking function for job recommendations is deeply personalized using generalized linear models [2]. The regression model uses global coe cients as well as ID-level coe cients - in our case coe cients per member and job.
CCS CONCEPTS
· Information Retrieval  Recommender Systems;
KEYWORDS
Information Retrieval, Personalized Search, Recommender Systems
REFERENCES
[1] S. Sankar. Did you mean "galene",https://engineering.linkedin.com/search/didyou-mean-galene. 2014.
[2] X. Zhang, Y. Zhou, Y. Ma, B.-C. Chen, L. Zhang, and D. Agarwal. Glmix: Generalized linear mixed models for large-scale response prediction. In Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, pages 363­372. ACM, 2016.

1347

