A Comparison of Time-aware Ranking Methods

Nattiya Kanhabua
Dept. of Computer Science Norwegian University of Science and Technology
Trondheim, Norway
nattiya@idi.ntnu.no

Kjetil Nørvåg
Dept. of Computer Science Norwegian University of Science and Technology
Trondheim, Norway
noervaag@idi.ntnu.no

ABSTRACT
When searching a temporal document collection, e.g., news archives or blogs, the time dimension must be explicitly incorporated into a retrieval model in order to improve relevance ranking. Previous work has followed one of two main approaches: 1) a mixture model linearly combining textual similarity and temporal similarity, or 2) a probabilistic model generating a query from the textual and temporal part of a document independently. In this paper, we compare the effectiveness of different time-aware ranking methods by using a mixture model applied to all methods. Extensive evaluation is conducted using the New York Times Annotated Corpus, queries and relevance judgments obtained using the Amazon Mechanical Turk.
Categories and Subject Descriptors H.3.3 [Information Storage and Retrieval]: Information Search and Retrieval General Terms Algorithms, Experimentation, Performance Keywords Time-aware ranking, Temporal similarity
1. INTRODUCTION
We deal with a retrieval task that a query is explicitly provided with time, i.e., containing temporal information needs. In this case, the time dimension must be incorporated into a retrieval model in order to improve relevance ranking. Consider a query containing the temporal expression "Independence Day 2009", an existing retrieval model relying on term matching will fail to retrieve a document mentioning "July 4, 2009", although two temporal expressions refer to the same date. Hence, when dealing with the time dimension, time uncertainty should be taken into account because any two temporal expressions can be relevant even they are not equally written.
The previous time-aware ranking methods [1, 2, 3, 4, 5] are based on two main approaches: 1) a mixture model linearly combining textual and temporal similarity, or 2) a probabilistic model generating a query from the textual and temporal part of a document independently. It is shown that time-aware ranking performs better than keyword-based ranking. To the best of our knowledge, an empirical comparison of different time-aware ranking methods has never been done before. In this paper, we will evaluate the effectiveness of different time-aware ranking methods: LMT [1], LMTU [1], TS [4], TSU [4], and FuzzySet [3] using the same dataset, and we will give a brief discussion of the evaluation.
Copyright is held by the author/owner(s). SIGIR'11, July 24­28, 2011, Beijing, China. ACM 978-1-4503-0757-4/11/07.

2. MODEL
A temporal expression or the publication date of a document is represented as a quadruple [1]: (tbl, tbu, tel, teu) where tbl and tbu are the lower bound and upper bound for the begin boundary of a time interval respectively. Similarly, tel and teu are the lower bound and upper bound for the end boundary of a time interval. A temporal query q is composed of keywords qtext and temporal expressions qtime. A document d consists of the textual part dtext, i.e., a bag of words, and the temporal part dtime composed of the publication date PubTime(d), and temporal expressions mentioned in the document's contents ContentTime(d) or {t1, . . . tk}.
To be comparable, we apply a mixture model to linearly combine textual similarity and temporal similarity for all ranking methods. Given a temporal query q, a document d will be ranked according to a score computed as follows:
S(q, d) = (1 - ) · S (qword, dword) +  · S (qtime, dtime)

where the mixture parameter  indicates the importance

of textual similarity S (qword, dword) and temporal similarity
S (qtime, dtime). Both similarity scores must be normalized, e.g., divided by the maximum scores, in order to the final

score S(q, d). S (qword, dword) can be measured using any

of existing text-based weighting functions. S (qtime, dtime)

measure temporal similarity by assuming that a temporal

expression tq  qtime is generated independently from each

other, and a two-step generative modelwas used [1]:



S

(qtime, dtime)

=

tq qtime

P (tq |dtime)

=

tq qtime

 1 |dtime |

td dtime

P (tq |td ) 

Linear interpolation smoothing will be applied to give the

probability P (tq|td) for an unseen query temporal expression tq in d. In the next section, we will explain how to estimate P (tq|td) for different time-aware ranking methods.

3. TIME-AWARE RANKING METHODS
The time-aware ranking methods we study differ from each other in two main aspects: 1) whether or not time uncertainty is concerned, and 2) whether the publication time or the content time of a document is used in ranking. LMT ignores time uncertainty and it exploits the content time of d. LMT can be calculated as:

P (tq |td)LMT =

0 1

if tq = td, if tq = td.

where td  ContentTime(d), and the score will be equal to 1 iff a temporal expression td is exactly equal to tq. LMTU concerns time uncertainty by assuming equal likelihood for any
time interval tq that tq can refer to, that is, tq = tq|tq  tq . The simplified calculation of P (tq|td) for LMTU is given as:

1257

P (tq |td)LMTU

=

|tq  td| |tq | · |td|

where td  ContentTime(d). The detailed computation of |tq  td|, |tq| and |td| can be referred to [1].
TS ignores time uncertainty. P (tq|td)TS can be computed similarly to P (tq|td)LMT, but td is corresponding to the publication time of d instead of the content time as computed for
LMT. TSU exploits the publication time of d as done for TS,
but it also takes time-uncertainty into account. P (tq|td)TSU is defined using an exponential decay function:

P (tq |td)TSU

=

DecayRate·

|tq

-td 

|

|tq

- td|

=

|tbql

- tbdl | + |tbqu

- tbdu| + |teql 4

- tedl | + |tequ

- tedu|

where td = PubTime(d), DecayRate and  are constant, 0 < DecayRate < 1 and  > 0, and  is a unit of time

distance. The main idea is to give a score that decreases

proportional to the time distance between tq and td. The less time distance, the more temporally similar they are.

FuzzySet measures temporal similarity using a fuzzy mem-

bership function and it exploits the publication time of d for

determining temporal similarity. P (tq|td)FuzzySet is given as:



     0f1 (td )

if td < a1, if td  a1  td  a2,

P (tq |td)FuzzySet =      1f02(td)

if td > a2  td  a3, if td > a3  td  a4, if td > a4.

where td = PubTime(d). f1(td) is

a1 -td a1 -a2

n
if a1 = a2, or

1 if a1 = a2. f2(td) is

a4 -td a4 -a3

m
if a3 = a4, or 1 if a3 = a4.

The parameters a1, a4, n, m are determined empirically.

4. EXPERIMENTS
The New York Times Annotated Corpus is used and 40 queries from [1] obtained using the Amazon Mechanical Turk. Note that, a standard dataset, e.g., TREC, is not applicable because queries are not time-related, and judgments are not targeted towards temporal information needs.
Documents are indexed and retrieved using the Apache Lucene version 2.9.3. There are two modes for retrieval [1]: 1) inclusive and 2) exclusive. For inclusive, both query terms and a temporal expression comprise a query qtext. For exclusive, only query terms constitute qtext, and a temporal expression is excluded from qtext. The baseline is the textual similarity S (qword, dword), i.e., the Lucene's default weighting function, using inclusive mode denoted TFIDF-IN.
The smoothing parameter is set to 0.1. Parameters for TSU are DecayRate = 0.5,  = 0.5, and  = 6 months. Parameters for FuzzySet are n = 2, m = 2, a1 = a2 - (0.25 × (a3 -a2)), and a4 = a3 +(0.50×(a3 -a2)). The effectiveness is measured as the precision at 1, 5 and 10 documents (P@1, P@5 and P@10), mean average precision (MAP), and mean reciprocal rank (MRR). The sensitivity of the effectiveness to the mixture parameter  is depicted in Figure 1. The results show that the effectiveness of LMT and LMTU decreases when  is increased, whereas the effectiveness of all other methods slightly increases with the value of .
Table 1 shows the best performing results of each method. In general, all time-aware ranking methods outperform the baseline significantly, except LMT. For each time-aware ranking, the effectiveness when retrieved using exclusive is better

0.8 LMT-IN
LMTU-IN TS-IN
TSU-IN FuzzySet-IN
0.6

0.8 LMT-EX
LMTU-EX TS-EX
TSU-EX FuzzySet-EX
0.6

P@10

P@10

0.4
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1

0.8 LMT-IN
LMTU-IN TS-IN
TSU-IN FuzzySet-IN 0.6

0.4
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1

0.8 LMT-EX
LMTU-EX TS-EX
TSU-EX FuzzySet-EX 0.6

MAP

MAP

0.4 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 

0.4 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 

Figure 1: Sensitivity of P@10 and MAP to the mixture parameter  for both retrieval modes.

Table 1: Effectiveness of different ranking methods, in bold indicates statistically improvement over all other methods using t-test (p < 0.05).

Method

P@1 P@5 P@10 MAP MRR

TFIDF-IN

.38

.43

.41

.49

.56

LMT-IN

.43

.41

.41

.48

.57

LMTU-IN

.48

.47

.45

.52

.68

TS-IN

.45

.49

.48

.54

.61

TSU-IN

.65

.51

.49

.58

.76

FuzzySet-IN

.45

.49

.48

.53

.61

LMT-EX

.38

.42

.48

.52

.55

LMTU-EX

.48

.48

.50

.55

.68

TS-EX

.48

.52

.53

.58

.63

TSU-EX

.68

.54

.54

.61

.77

FuzzySet-EX .48

.53

.54

.59

.64

than inclusive. TSU performs best among all methods in both inclusive and exclusive modes, and it outperforms all other methods significantly for P@1, MAP and MRR.
5. CONCLUSIONS
Time-aware ranking methods show better performance compared to a method based on only keywords. When the time-uncertainty is taken into account, the effectiveness is improved significantly. Even though TSU gains the best performance among other methods, the usefulness of TSU is still limited for a document collection with no time metadata, i.e., the publication time of documents is not available. On the contrary, LMT and LMTU can be applied to any document collection without time metadata, but the extraction of temporal expressions is needed.
6. REFERENCES
[1] K. Berberich, S. Bedathur, O. Alonso, and G. Weikum. A language modeling approach for temporal information needs. In Proceedings of ECIR'2010, 2010.
[2] F. Diaz and R. Jones. Using temporal profiles of queries for precision prediction. In Proceedings of SIGIR'2004, 2004.
[3] P. J. Kalczynski and A. Chou. Temporal document retrieval model for business news archives. Inf. Process. Manage., 2005.
[4] N. Kanhabua and K. Nørv°ag. Determining time of queries for re-ranking search results. In Proceedings of ECDL'2010, 2010.
[5] X. Li and W. B. Croft. Time-based language models. In Proceedings of CIKM'2003, 2003.

1258

