The Meta-Dex Suite: Generating and Analyzing
Indexes and Meta-Indexes
Michael Huggett and Edie Rasmussen
University of British Columbia Suite 470, 1961 East Mall Vancouver, BC V6T 1Z1 (1-604) 827-5486
{m.huggett, edie.rasmussen}@ubc.ca

ABSTRACT
Our Meta-dex software suite extracts content and index text from a corpus of PDF files, and generates a meta-index that references entries across an entire domain. We provide tools to analyze the individual and integrated indexes, and visualize entries and books within the meta-index. The suite is scalable to very large data sets.
Categories and Subject Descriptors
H.5.2 [Information Interfaces and Presentation]: User Interfaces ­ evaluation/methodology, prototyping
General Terms
Algorithms, Measurement, Design.
Keywords
Digital collections, digital books, indexes, meta-indexes, visualization, user interfaces.
1. THE UTILITY OF META-INDEXES
Large-scale digitization projects such as the Gutenberg Project, and Google Books [1] have placed large amounts of text in the public domain. Scholars have long used back-of-book indexes (BoBIs) to find information in print [2]. BoBIs are compiled by professional indexers as a useful summary of content, and as indicators of important concepts. They also offer an alternative to keyword search for locating relevant information [3, 4].
The multiple indexes in a corpus contain a range of domain vocabulary. They reveal knowledge structures and provide entry points for navigation. With this in mind, our Indexer's Legacy project is investigating how BoBIs can add value to search. The Meta-dex suite is the product of this endeavour. To our knowledge no widely-available software exists to create metaindexes from plain-text and PDF documents.
2. OVERVIEW OF THE PROTOTYPE
Meta-indexes are generated across several steps (Fig.1). At each step, summary statistics are calculated and saved to the database for later analysis. We will demonstrate the build process, and show visualizations of end products. The suite's components are:
Extractor. Plain-text files of content and index are generated from the book PDF.
OCR error filter. An enhanced editor highlights for correction terms that are likely to be OCR errors.
Expander. Each entry in an index is 'expanded' into fully-
Copyright is held by the author/owner(s). SIGIR'11, July 24­28, 2011, Beijing, China. ACM 978-1-4503-0757-4/11/07.

qualified entries from the main heading through each subheading to each individual page reference.
Compressor. The large sorted file is 'compressed' back into a tabbed index format, to compile references under similar headings. Index terms are generalized to reduce the effects of plurals, gerunds, etc. The entries from each book are tagged with the book's unique ID number. The result is a global domain index that references specific pages in specific books.

book ID: 1

extracted
Aaa, 123 bbb, 234 ccc, 789

expanded
Aaa, 123 Aaa, bbb, 234 Aaa, ccc, 789

compressed meta-index
Aaa, 1[123], 2[456] bbb, 1[234], 2[567]

book ID: 2

Aaa, 456 bbb, 567 ddd, 890

Aaa, 456 Aaa, bbb, 567 Aaa, ddd, 890

ccc, 1[789] ddd, 2[890]

Figure 1: Building a meta-index
Analysis tools. During extraction, the number of lines, entries, sub-entries, parts-of-speech, etc. and term frequencies are saved to a database for later analysis. Basic proportions of mostrepresentative books, 'singleton' entries, expansion and compression ratios, etc. are generated for comparison between domains. Language modeling is also used to gauge the coherence between index and content, both within books and across an entire domain. Visualization tools show entries and terms from personalized searches projected onto the domain meta-index, and will use interactive colour, zooming, and three-dimensional displays.

Suite components can be run locally, but can also be run on the cloud in order to accommodate users without adequate local computing power and storage. Our current implementation uses an Amazon EC2 server to read from and write to storage on S3.

3. REFERENCES
[1] Coyle, K. 2006. Mass digitization of books. Journal of Academic
Librarianship 32,6, 641-645.
[2] Jörgensen, C. and Liddy, E.D. 1996. Information access or
information anxiety?--an exploratory evaluation of book index features. The Indexer 20, 64-68.
[3] Abdullah, N. and Gibb, F. 2008. Using a task-based approach in evaluating the usability of BoBIs in an E-book environment. ECDL 2008, LNCS 4956, 246-257.
[4] Egan, D.E., Remde, J.R., Gomez, L.M., Landauer, T.K., Eberhardt,
J. and Lochbaum, C.C. 1989. Formative design evaluation of Superbook. ACM Transactions on Information Systems 7(1), 30-57.

1285

