Diversifying Product Search Results

Xiangru Chen, Haofen Wang, Xinruo Sun, Junfeng Pan and Yong Yu
Apex Data & Knowledge Management Lab Shanghai Jiao Tong University Shanghai, 200240, China
{xrchen, whfcarter, xrsun, panjf, yyu}@apex.sjtu.edu.cn

ABSTRACT
In recent years, online shopping is becoming more and more popular. Users type keyword queries on product search systems to find relevant products, accessories, and even related products. However, existing product search systems always return very similar products on the first several pages instead of taking diversity into consideration. In this paper, we propose a novel approach to address the diversity issue in the context of product search. We transform search result diversification into a combination of diversifying product categories and diversifying product attribute values within each category. The two sub-problems are optimization problems which can be reduced into well-known NP-hard problems respectively. We further leverage greedy-based approximation algorithms for efficient product search results re-ranking.
Categories and Subject Descriptors
H.3.3 [Information Storage and Retrieval]: Retrieval Models
General Terms
Algorithm
Keywords
Product Search, Result Diversification
1. INTRODUCTION
Nowadays, online shopping has become the first choice of a large group of users. Facing so many different kinds of products, product search systems are always the main entrance for most people to begin online shopping. Similar to searching Web documents, users type keyword queries to those product search systems and get a list of relevant products. Within the results, users wish to find products of different types or brands, products with different attribute values (like color, model, size) and their accessories on the first several pages. However, like Web search engines [2], existing product search systems perform poorly on result diversification and usually return very similar products.
To address the diversity issue, we propose a simple but effective approach with special considerations on the features of product data. Different from Web documents, products
Copyright is held by the author/owner(s). SIGIR'11, July 24­28, 2011, Beijing, China. ACM 978-1-4503-0757-4/11/07.

on the Web are usually semi-structured. Each product is described by a set of attributes (e.g., product name, color and model). It also belongs to one or several categories predefined in a taxonomy. According to the above observation of product features, the result diversification is composed of two parts: (1) diversifying product categories enables returning products of different types as well as product accessories; (2) diversifying attribute values of products within each category allows to return products of different attributes or particular attribute values. Both aspects ensure more diverse products are returned.
Like diversification approaches widely used in Web document search, our approach re-ranks relevant results provided by some general search engine. In other words, while finding diverse product results on the first pages, we also preserve the high relevance of top returned products. We define the two sub tasks as optimization problems in which both relevance scores and diversity of products are included in the objective functions. The optimization problems are further reduced to two well-known NP-hard problems and we use greedy approximation algorithms to produce diversified but relevant results efficiently.
Product result diversification is different from that in database search. When searching database with keyword queries, people usually focus on query translation for diversified structured queries. On the other hand, compared with result diversification for Web documents, we provide more dedicated algorithms by utilizing the structural features of product data. To the best of our knowledge, this is the first work to address the diversity issue in the context of product search.
2. IMPLEMENTATION DETAILS
In order to diversify products, we re-rank the search results (with their relevance score) returned by some existing product search systems or general search engines. We first group product search results according to their categories. In each category, we re-rank products according to a newly defined score function called attribute diversity score. Then we merge the items from different categories according to another newly defined score function called category diversity score.
2.1 Attribute Diversification
For a keyword query q and a category c, we fetch all relevant items from the underlying search engine. The objective of attribute diversification is to present as many <attribute, value> pairs as possible in the top items while preserving the relevance of these items.

1093

Suppose L(q, c) is the result list of query q under category c. Let

g(L, i) = w(Li) + a A(Li)\ A(Lj)

(1)

j<i

be the attribute diversity score of the i-th item in list L, where Li is the i-th item in list L, and A(·) is the set of attribute-value pairs of a product. The formula is composed of two parts. The former one w(Li) stands for the relevance of Li while the latter one counts the contribution of attribute-value pairs of Li which are not included in any previous items. Note a is a parameter that adjusts the weight between relevance and diversity.
Given the number of returned products as k, the objective function for re-ranking within one category is defined as:

k

k

k

fa(L, k) = g(L, i) = w(Li) + a A(Li) (2)

i=1

i=1

i=1

Through mapping each product u to a set of all of its

attribute-value pairs (each weighted by a) and the product

itself (weighted by w(u)), we reduce the re-ranking prob-

lem to the weighted maximum coverage problem. Since the

problem

is

NP-hard,

we

employ

a

greedy

e e-1

-approximation

algorithm to make the re-ranking process practical. In each

step, we add the item with the maximum attribute diversity

score among the remaining items to the result list.

2.2 Category Diversification
We get the final result list by merging different result lists of diversified categories.
While a product might belong to more than one category, we can pick up a dominant category which shares the largest number of attribute schemata with the product. We denote the dominant category of a product u as c(u).
Suppose u is the l-th element of L(q, c(u)), we define gu as g(L(q, c(u)), l). Let L be the final result list. Inspired by [3], we define the objective function as follow:

k

fc(L, k) = (k-1) gLi +2c

dist(c(Li), c(Lj)) (3)

i=1

1i,jk

where dist(·, ·) is the category diversity score function which defines the node distance on a taxonomy tree, and c is an adjusting parameter.
We further reduce the optimization problem to the facility dispersion problem by defining a distance function between two items u and v:

d (u, v) = gu + gv + 2cdist(c(u), c(v))

(4)

The facility dispersion problem is also NP-hard, we employ a 2-approximation algorithm. In each step, we choose the pair of products with the maximum pairwise distance among the unselected items. Since the result list of each category is ordered non-increasingly by the product attribute diversity score, at each selection stage, we only need to consider the top two unselected items in each category's result list to make d (·, ·) maximized, which yields a fast solution.

3. EVALUATION
The experiments were carried out on a product data set exported from a famous online shopping site. There exist 17,480,804 products in the data set. Each product has

NDCG-IA MRR-IA

0.37

R-only RC

0.36

RCA

0.35

0.34

0.33

0.32 k=3 k=5 k=10

0.38 R-only

0.36

RC RCA

0.34

0.32

0.3

0.28

0.26

k=3

k=5 k=10

Figure 1: NDCG-IA scores and MRR-IA scores

18.55 attributes on average. These products belong to 712 categories which form a taxonomy tree.
We use NDCG-IA (intent-aware normalized discounted cumulative gain) and MRR-IA (intent-aware mean reciprocal rank) as the evaluation metrics which have been proposed in [1]. Since this is the first work of product result diversification, we use Lucene as our baseline to return the initial the result list by only considering relevance.
Since we do not own real product query logs, in order to reflect real user information needs, we selected 30 keyword queries covering different domains like IT, Office, Clothes, Mechanics, Food, Music and so on. The number of categories associated with these queries ranges from 2 to 4.
The search results of each query were labeled by our colleagues who are not involved in this project. The NDCG-IA scores and MRR-IA scores under different k are shown in Figure 1. The baseline system is marked as R-only. RC represents the system considering category diversification only, and RCA is the system further diversifies attributes within each category. As shown in the figure, we can notice with the increase of k, the NDCG-IA scores and MRR-IA scores of all three systems increase accordingly. In most cases, RC performs slightly better than the baseline. When further considering the attribute diversification, the performance gain becomes significantly large. Moreover, RCA performs consistently better than the other two systems no matter what k is with respective to both metrics.
Finally, we discuss the influence of the two parameters a and c. When a increases, we prefer products with more attributes or different attribute values within one category. When c increases, we prefer products belonging to more different categories. In both cases, we lower the importance of relevance contribution in the top products. In this paper, we adjusted the two parameters (c = 1 and a = 1.5) to reflect a balanced consideration of relevance and diversity.
4. CONCLUSION AND FUTURE WORK
In this paper, we proposed a simple but effective approach which tries to diversify search results for product data. The diversification is done through re-ranking products in one category and merging result lists from different categories. In the future, we plan to try other features in the calculation and carry out more extensive experiments on real query logs.
5. REFERENCES
[1] R. Agrawal, S. Gollapudi, A. Halverson, and S. Ieong. Diversifying Search Results. In WSDM '09. ACM, 2009.
[2] J. Carbonell and J. Goldstein. The Use of MMR, Diversity-Based Reranking for Reordering Documents and Producing Summaries. In SIGIR '98. ACM, 1998.
[3] S. Gollapudi and A. Sharma. An Axiomatic Approach for Result Diversification. In WWW '09. ACM, 2009.

1094

