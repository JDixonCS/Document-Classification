table <- read_csv("C:/Users/Predator/Documents/Document-Classification/classifier/Output/Table.csv")
library(tidyverse)
table <- read_csv("C:/Users/Predator/Documents/Document-Classification/classifier/Output/Table.csv")
table <- read_csv("C:/Users/Predator/Documents/Document-Classification/classifier/Output/Table.csv")
col1 <- table[["Year"]]
col2 <- table[["Sampling"]]
col3 <- table[["F/T"]]
col4 <- table[["Classifier"]]
col5 <- table[["Precision"]]
col6 <- table[["Recall"]]
dim(df)
dim(table)
head(table)
all_2010_pre <- table[1:31,5]
all_2010_rec <- table[1:31,6]
View(all_2010_rec)
library(tidyverse)
table <- read_csv("C:/Users/Predator/Documents/Document-Classification/classifier/Output/Table.csv")
all_2010_pre <- table[1:30,5]
all_2010_rec <- table[1:30,6]
ggplot(data = table) +
geom_point(mapping = aes(x = all_2010_pre, y = all_2010_rec))
ggplot(data = table) +
geom_point(mapping = aes(x = all_2010_pre, y = all_2010_rec))
ggplot(data = all_2010) +
geom_point(mapping = aes(x = all_2010_pre, y = all_2010_rec))
ggplot(data = all_2010) +
geom_point(mapping = aes(x = all_2010_pre, y = all_2010_rec))
all_2010 <- table[1:30, 4:5]
ggplot(data = all_2010) +
geom_point(mapping = aes(x = all_2010_pre, y = all_2010_rec))
ggplot(data = all_2010) +
geom_point(mapping = aes(x = all_2010_pre, y = all_2010_rec))
ggplot(data = all_2010) +
geom_point(mapping = aes(x = all_2010_pre, y = all_2010_rec))
ggplot(data = all_2010) + geom_point(mapping = aes(x = all_2010_pre, y = all_2010_rec))
ggplot(data = all_2010) + geom_point(mapping = aes(x =all_2010_pre, y =all_2010_rec))
library(tidyverse)
library(tidyverse)
library(reshape)
library(ggplot2)
library(modelr)
options(na.action = na.warn)
table <- read.csv("C:/Users/Predator/Documents/Document-Classification/classifier/Output/Table.csv")
head(table)
precision =table[,5]
recall = table[,6]
classifier = table[,4]
sampling=table[,2]
technique=table[,3]
# Chapter 3 works
ggplot(data = table) +
geom_point(mapping = aes(x = precision, y = recall))
ggplot(data = table) +
geom_point(mapping = aes(x = precision, y = recall, color = technique))
ggplot(data = table) +
geom_point(mapping = aes(x = precision, y = recall, size = technique))
# Left
ggplot(data = table) +
geom_point(mapping = aes(x = precision, y = recall, alpha = technique))
library(tidyverse)
library(reshape)
library(ggplot2)
library(modelr)
options(na.action = na.warn)
table <- read.csv("C:/Users/z3696/Documents/Document-Classification/classifier/Output/Table.csv")
head(table)
precision =table[,5]
recall = table[,6]
classifier = table[,4]
sampling=table[,2]
technique=table[,3]
# Chapter 3 works
ggplot(data = table) +
geom_point(mapping = aes(x = precision, y = recall))
ggplot(data = table) +
geom_point(mapping = aes(x = precision, y = recall, color = technique))
ggplot(data = table) +
geom_point(mapping = aes(x = precision, y = recall, size = technique))
# Left
ggplot(data = table) +
geom_point(mapping = aes(x = precision, y = recall, alpha = technique))
# Right
ggplot(data = table) +
geom_point(mapping = aes(x = precision, y = recall, shape = technique))
ggplot(data = table) +
geom_point(mapping = aes(x = precision, y = recall), color = "blue")
ggplot(data = table) +
geom_point(mapping = aes(x = precision, y = recall)) + facet_wrap(~ Technique, nrow = 2)
ggplot(data = table) +
geom_point(mapping = aes(x = precision, y = recall)) +
facet_grid(Sampling ~ Technique)
ggplot(table, aes(precision, recall)) + geom_boxplot()
ggplot(data = table) +
geom_point(mapping = aes(x = precision, y = recall)) +
geom_smooth(mapping = aes(x = precision, y = recall))
ggplot(data = table) +
stat_summary(
mapping = aes(x = precision, y = recall),
fun.min = min,
fun.max = max,
fun = median
)
ggplot(table, aes(x = precision, y = recall)) +
geom_point(size = 2, colour = "grey30") +
geom_abline(
aes(intercept = a1, slope = a2, colour = -dist),
data = table(models, rank(dist) <= 10)
)
ggplot(data = table, mapping = aes(x = precision, y = recall, alpha = classifier)) +
geom_boxplot()
ggplot(data = table) +
geom_count(mapping = aes(x = precision, y = recall, alpha = classifier))
x <- precision
y <- recall
ggplot(table) +
geom_histogram(mapping = aes(x = y), binwidth = 0.1)
ggplot(data = table) +
geom_point(mapping = aes(x = precision, y = recall))
# models <- tibble(
#   a1 = runif(250, -20, 40),
#   a2 = runif(250, -5, 5)
# )
# 7 EDA
ggplot(data = table) +
geom_bar(mapping = aes(x = classifier))
table %>%
count(cut_width(Precision, 0.5))
table %>%
count(Classifier)
table %>%
count(cut_width(Recall, 0.5))
smaller <- table %>%
filter(Classifier > 60)
ggplot(data = smaller, mapping = aes(x = Precision)) +
geom_histogram(binwidth = 0.1)
ggplot(data = smaller, mapping = aes(x = Recall, colour = classifier)) +
geom_freqpoly(binwidth = 0.1)
ggplot(data = smaller, mapping = aes(x = Recall)) +
geom_histogram(binwidth = 0.01)
ggplot(data = smaller, mapping = aes(x = Precision, colour = classifier)) +
geom_freqpoly(binwidth = 0.1)
ggplot(data = smaller, mapping = aes(x = Precision)) +
geom_histogram(binwidth = 0.01)
ggplot(data = smaller, mapping = aes(x = Precision)) +
geom_histogram(binwidth = 0.25)
ggplot(table) +
geom_histogram(mapping = aes(x = y), binwidth = 0.5)
ggplot(table) +
geom_histogram(mapping = aes(x = y), binwidth = 0.5) +
coord_cartesian(ylim = c(0, 50))
# unusual <- table %>%
#   filter(y < 30 | y > 60) %>%
#   select(x, y) %>%
#   arrange(y)
# unusual
ggplot(data = table, mapping = aes(x = x, y = y)) +
geom_point()
ggplot(data = table, mapping = aes(x = x, y = y)) +
geom_point(na.rm = TRUE)
ggplot(data = table, mapping = aes(x = precision)) +
geom_freqpoly(mapping = aes(colour = classifier), binwidth = 500)
ggplot(data = table, mapping = aes(x = precision, y = ..recall..)) +
geom_freqpoly(mapping = aes(colour = classifier), binwidth = 500)
ggplot(data = table, mapping = aes(x = precision, y = recall)) +
geom_boxplot()
ggplot(data = table, mapping = aes(x = classifier, y = precision)) +
geom_boxplot()
ggplot(data = table, mapping = aes(x = classifier, y = recall)) +
geom_boxplot()
ggplot(data = table) +
geom_boxplot(mapping = aes(x = reorder(classifier, precision, FUN = median), y = precision))
ggplot(data = table) +
geom_boxplot(mapping = aes(x = reorder(classifier, precision, FUN = median), y = precision)) +
coord_flip()
ggplot(data = table) +
geom_count(mapping = aes(x = classifier, y = sampling))
table %>%
count(Classifier, Sampling)
table %>%
count(Classifier, Sampling) %>%
ggplot(mapping = aes(x = Classifier, y = Sampling)) +
geom_tile(mapping = aes(fill = n))
ggplot(data = table) +
geom_point(mapping = aes(x = Precision, y = Recall), alpha = 50 / 100)
ggplot(data = smaller) +
geom_bin2d(mapping = aes(x = Precision, y = Recall))
# install.packages("hexbin")
library(hexbin)
ggplot(data = smaller) +
geom_hex(mapping = aes(x = Precision, y = Recall))
ggplot(data = smaller, mapping = aes(x = Precision, y = Recall)) +
geom_boxplot(mapping = aes(group = cut_width(Precision, 0.1)))
ggplot(data = smaller, mapping = aes(x = Precision, y = Recall)) +
geom_boxplot(mapping = aes(group = cut_number(Precision, 20)))
ggplot(data = table, mapping = aes(x = classifier, y = recall)) +
geom_boxplot()
ggplot(data = table) +
geom_boxplot(mapping = aes(x = reorder(classifier, precision, FUN = median), y = precision))
ggplot(data = table) +
geom_boxplot(mapping = aes(x = reorder(classifier, precision, FUN = median), y = precision)) +
coord_flip()
ggplot(data = table) +
geom_count(mapping = aes(x = classifier, y = sampling))
table %>%
count(Classifier, Sampling)
table %>%
count(Classifier, Sampling) %>%
ggplot(mapping = aes(x = Classifier, y = Sampling)) +
geom_tile(mapping = aes(fill = n))
ggplot(data = table) +
geom_point(mapping = aes(x = Precision, y = Recall), alpha = 50 / 100)
ggplot(data = smaller) +
geom_bin2d(mapping = aes(x = Precision, y = Recall))
# install.packages("hexbin")
library(hexbin)
ggplot(data = smaller) +
geom_hex(mapping = aes(x = Precision, y = Recall))
ggplot(data = smaller, mapping = aes(x = Precision, y = Recall)) +
geom_boxplot(mapping = aes(group = cut_width(Precision, 0.1)))
ggplot(data = smaller, mapping = aes(x = Precision, y = Recall)) +
geom_boxplot(mapping = aes(group = cut_number(Precision, 20)))
ggplot(data = table) +
geom_point(mapping = aes(x = x, y = y)) +
coord_cartesian(xlim = c(0, 90), ylim = c(0, 90))
ggplot(data = table) +
geom_point(mapping = aes(x = Precision, y = Recall))
library(modelr)
mod <- lm(log(Recall) ~ log(Precision), data = table)
table1 <- table %>%
add_residuals(mod) %>%
mutate(resid = exp(resid))
ggplot(data = table1) +
geom_point(mapping = aes(x = Precision, y = resid))
ggplot(data = table1) +
geom_boxplot(mapping = aes(x = Precision, y = resid))
ggplot(data = table, mapping = aes(x = precision)) +
geom_freqpoly(binwidth = 0.25)
ggplot(table, aes(Precision)) +
geom_freqpoly(binwidth = 0.25)
table %>%
count(Classifier, Sampling) %>%
ggplot(aes(Classifier, Sampling, fill = n)) +
geom_tile()
#> # A tibble: 5 x 2
#>   cut           n
#>   <ord>     <int>
#> 1 Fair       1610
#> 2 Good       4906
#> 3 Very Good 12082
#> 4 Premium   13791
#> 5 Ideal     21551
# Wrangle
table %>%
count(Precision) %>%
filter(n > 1)
table %>%
count(Precision, Recall) %>%
filter(n > 1)
table %>%
count(Precision, Recall) %>%
filter(n > 1)
# test1 <- c(precision, recall)
# test2 <- c(precision)
# str_view(test2, "60")
# Chapter 23
x <- precision
y <- recall
# models <- tibble(
#   a1 = c(precision),
#   a2 = c(recall)
# )
models <- tibble(
a1 = precision,
a2 = recall
)
models
ggplot(table, aes(x=precision, y=recall)) +
geom_abline(aes(intercept = a1, slope = a2), data = models, alpha = 1/4) +
geom_point()
model1 <- function(a, data) {
a[1] + data$x * a[2]
}
model1(c(7, 1.5), table)
measure_distance <- function(mod, data) {
diff <- data$y - model1(mod, data)
sqrt(mean(diff ^ 2))
}
table_dist <- function(a1, a2) {
measure_distance(c(a1, a2), table)
}
# test2 <- c(precision[1],recall[2])
# test2
measure_distance(c(7.5, 1), table)
models <- models %>%
mutate(dist = purrr::map2_dbl(a1, a2, table_dist))
models
ggplot(table, aes(x = precision, y = recall)) +
geom_point(size = 2, colour = "grey30") +
geom_abline(
aes(intercept = a1, slope = a2, colour = -dist),
data = filter(models, rank(dist) <= 10)
)
ggplot(models, aes(a1, a2)) +
geom_point(data = filter(models, rank(dist) <= 10), size = 4, colour = "red") +
geom_point(aes(colour = -dist))
grid <- expand.grid(
a1 = seq(-5, 20, length=25, along.with=precision),
a2 = seq(1, 3, length = 25, along.with=recall)
) %>%
mutate(dist = purrr::map2_dbl(a1, a2, table_dist))
grid %>%
ggplot(aes(a1, a2)) +
geom_point(data = filter(grid, rank(dist) <= 10), size = 4, colour = "red") +
geom_point(aes(colour = -dist))
ggplot(table, aes(x=precision, y=recall)) +
geom_point(size = 2, colour = "grey30") +
geom_abline(
aes(intercept = a1, slope = a2, colour = -dist),
data = filter(grid, rank(dist) <= 10)
)
best <- optim(c(0, 0), measure_distance, data = table)
best$par
